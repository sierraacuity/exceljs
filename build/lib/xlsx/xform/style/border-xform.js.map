{"version":3,"file":"border-xform.js","names":["BaseXform","require","utils","ColorXform","EdgeXform","_BaseXform","_inherits","_super","_createSuper","name","_this","_classCallCheck","call","map","color","_createClass","key","get","value","render","xmlStream","model","defaultColor","openNode","style","addAttribute","closeNode","parseOpen","node","parser","attributes","undefined","parseText","text","parseClose","validStyle","validStyleValues","reduce","p","v","BorderXform","_BaseXform2","_super2","_this2","top","left","bottom","right","diagonal","up","down","add","edgeModel","edgeXform","_objectSpread","reset","diagonalUp","parseBoolean","diagonalDown","extensions","Object","assign","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/border-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst BaseXform = require('../base-xform');\r\nconst utils = require('../../../utils/utils');\r\n\r\nconst ColorXform = require('./color-xform');\r\n\r\nclass EdgeXform extends BaseXform {\r\n  constructor(name) {\r\n    super();\r\n\r\n    this.name = name;\r\n    this.map = {\r\n      color: new ColorXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return this.name;\r\n  }\r\n\r\n  render(xmlStream, model, defaultColor) {\r\n    const color = (model && model.color) || defaultColor || this.defaultColor;\r\n    xmlStream.openNode(this.name);\r\n    if (model && model.style) {\r\n      xmlStream.addAttribute('style', model.style);\r\n      if (color) {\r\n        this.map.color.render(xmlStream, color);\r\n      }\r\n    }\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.name: {\r\n        const {style} = node.attributes;\r\n        if (style) {\r\n          this.model = {\r\n            style,\r\n          };\r\n        } else {\r\n          this.model = undefined;\r\n        }\r\n        return true;\r\n      }\r\n      case 'color':\r\n        this.parser = this.map.color;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (name === this.name) {\r\n      if (this.map.color.model) {\r\n        if (!this.model) {\r\n          this.model = {};\r\n        }\r\n        this.model.color = this.map.color.model;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  validStyle(value) {\r\n    return EdgeXform.validStyleValues[value];\r\n  }\r\n}\r\n\r\nEdgeXform.validStyleValues = [\r\n  'thin',\r\n  'dotted',\r\n  'dashDot',\r\n  'hair',\r\n  'dashDotDot',\r\n  'slantDashDot',\r\n  'mediumDashed',\r\n  'mediumDashDotDot',\r\n  'mediumDashDot',\r\n  'medium',\r\n  'double',\r\n  'thick',\r\n].reduce((p, v) => {\r\n  p[v] = true;\r\n  return p;\r\n}, {});\r\n\r\n// Border encapsulates translation from border model to/from xlsx\r\nclass BorderXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      top: new EdgeXform('top'),\r\n      left: new EdgeXform('left'),\r\n      bottom: new EdgeXform('bottom'),\r\n      right: new EdgeXform('right'),\r\n      diagonal: new EdgeXform('diagonal'),\r\n    };\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    const {color} = model;\r\n    xmlStream.openNode('border');\r\n    if (model.diagonal && model.diagonal.style) {\r\n      if (model.diagonal.up) {\r\n        xmlStream.addAttribute('diagonalUp', '1');\r\n      }\r\n      if (model.diagonal.down) {\r\n        xmlStream.addAttribute('diagonalDown', '1');\r\n      }\r\n    }\r\n    function add(edgeModel, edgeXform) {\r\n      if (edgeModel && !edgeModel.color && model.color) {\r\n        // don't mess with incoming models\r\n        edgeModel = {\r\n          ...edgeModel,\r\n          color: model.color,\r\n        };\r\n      }\r\n      edgeXform.render(xmlStream, edgeModel, color);\r\n    }\r\n    add(model.left, this.map.left);\r\n    add(model.right, this.map.right);\r\n    add(model.top, this.map.top);\r\n    add(model.bottom, this.map.bottom);\r\n    add(model.diagonal, this.map.diagonal);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'border':\r\n        this.reset();\r\n        this.diagonalUp = utils.parseBoolean(node.attributes.diagonalUp);\r\n        this.diagonalDown = utils.parseBoolean(node.attributes.diagonalDown);\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    if (name === 'border') {\r\n      const model = (this.model = {});\r\n      const add = function(key, edgeModel, extensions) {\r\n        if (edgeModel) {\r\n          if (extensions) {\r\n            Object.assign(edgeModel, extensions);\r\n          }\r\n          model[key] = edgeModel;\r\n        }\r\n      };\r\n      add('left', this.map.left.model);\r\n      add('right', this.map.right.model);\r\n      add('top', this.map.top.model);\r\n      add('bottom', this.map.bottom.model);\r\n      add('diagonal', this.map.diagonal.model, {up: this.diagonalUp, down: this.diagonalDown});\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = BorderXform;\r\n"],"mappings":"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"}