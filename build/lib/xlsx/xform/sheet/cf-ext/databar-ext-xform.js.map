{"version":3,"file":"databar-ext-xform.js","names":["BaseXform","require","CompositeXform","ColorXform","CfvoExtXform","DatabarExtXform","_CompositeXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","cfvoXform","borderColorXform","negativeBorderColorXform","negativeFillColorXform","axisColorXform","_createClass","key","get","value","render","xmlStream","model","_this2","openNode","tag","minLength","toIntAttribute","maxLength","border","toBoolAttribute","gradient","negativeBarColorSameAsPositive","negativeBarBorderColorSameAsPositive","axisPosition","toAttribute","direction","cfvo","forEach","borderColor","negativeBorderColor","negativeFillColor","axisColor","closeNode","createNewModel","_ref","attributes","toIntValue","toBoolValue","toStringValue","onParserClose","name","parser","_name$split","split","_name$split2","_slicedToArray","prop","push","isExt","rule","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/databar-ext-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\r\nconst CompositeXform = require('../../composite-xform');\r\n\r\nconst ColorXform = require('../../style/color-xform');\r\nconst CfvoExtXform = require('./cfvo-ext-xform');\r\n\r\nclass DatabarExtXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'x14:cfvo': (this.cfvoXform = new CfvoExtXform()),\r\n      'x14:borderColor': (this.borderColorXform = new ColorXform('x14:borderColor')),\r\n      'x14:negativeBorderColor': (this.negativeBorderColorXform = new ColorXform(\r\n        'x14:negativeBorderColor'\r\n      )),\r\n      'x14:negativeFillColor': (this.negativeFillColorXform = new ColorXform(\r\n        'x14:negativeFillColor'\r\n      )),\r\n      'x14:axisColor': (this.axisColorXform = new ColorXform('x14:axisColor')),\r\n    };\r\n  }\r\n\r\n  static isExt(rule) {\r\n    // not all databars need ext\r\n    // TODO: refine this\r\n    return !rule.gradient;\r\n  }\r\n\r\n  get tag() {\r\n    return 'x14:dataBar';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag, {\r\n      minLength: BaseXform.toIntAttribute(model.minLength, 0, true),\r\n      maxLength: BaseXform.toIntAttribute(model.maxLength, 100, true),\r\n      border: BaseXform.toBoolAttribute(model.border, false),\r\n      gradient: BaseXform.toBoolAttribute(model.gradient, true),\r\n      negativeBarColorSameAsPositive: BaseXform.toBoolAttribute(\r\n        model.negativeBarColorSameAsPositive,\r\n        true\r\n      ),\r\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolAttribute(\r\n        model.negativeBarBorderColorSameAsPositive,\r\n        true\r\n      ),\r\n      axisPosition: BaseXform.toAttribute(model.axisPosition, 'auto'),\r\n      direction: BaseXform.toAttribute(model.direction, 'leftToRight'),\r\n    });\r\n\r\n    model.cfvo.forEach(cfvo => {\r\n      this.cfvoXform.render(xmlStream, cfvo);\r\n    });\r\n\r\n    this.borderColorXform.render(xmlStream, model.borderColor);\r\n    this.negativeBorderColorXform.render(xmlStream, model.negativeBorderColor);\r\n    this.negativeFillColorXform.render(xmlStream, model.negativeFillColor);\r\n    this.axisColorXform.render(xmlStream, model.axisColor);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel({attributes}) {\r\n    return {\r\n      cfvo: [],\r\n      minLength: BaseXform.toIntValue(attributes.minLength, 0),\r\n      maxLength: BaseXform.toIntValue(attributes.maxLength, 100),\r\n      border: BaseXform.toBoolValue(attributes.border, false),\r\n      gradient: BaseXform.toBoolValue(attributes.gradient, true),\r\n      negativeBarColorSameAsPositive: BaseXform.toBoolValue(\r\n        attributes.negativeBarColorSameAsPositive,\r\n        true\r\n      ),\r\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolValue(\r\n        attributes.negativeBarBorderColorSameAsPositive,\r\n        true\r\n      ),\r\n      axisPosition: BaseXform.toStringValue(attributes.axisPosition, 'auto'),\r\n      direction: BaseXform.toStringValue(attributes.direction, 'leftToRight'),\r\n    };\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    const [, prop] = name.split(':');\r\n    switch (prop) {\r\n      case 'cfvo':\r\n        this.model.cfvo.push(parser.model);\r\n        break;\r\n\r\n      default:\r\n        this.model[prop] = parser.model;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DatabarExtXform;\r\n"],"mappings":"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"}