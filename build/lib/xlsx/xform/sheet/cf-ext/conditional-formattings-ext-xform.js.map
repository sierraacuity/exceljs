{"version":3,"file":"conditional-formattings-ext-xform.js","names":["CompositeXform","require","CfRuleExtXform","ConditionalFormattingExtXform","ConditionalFormattingsExtXform","_CompositeXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","cfXform","_createClass","key","get","value","hasContent","model","hasExtContent","undefined","some","cf","rules","isExt","prepare","options","_this2","forEach","render","xmlStream","_this3","openNode","tag","closeNode","createNewModel","onParserClose","name","parser","push","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/conditional-formattings-ext-xform.js"],"sourcesContent":["const CompositeXform = require('../../composite-xform');\r\n\r\nconst CfRuleExtXform = require('./cf-rule-ext-xform');\r\nconst ConditionalFormattingExtXform = require('./conditional-formatting-ext-xform');\r\n\r\nclass ConditionalFormattingsExtXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'x14:conditionalFormatting': (this.cfXform = new ConditionalFormattingExtXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'x14:conditionalFormattings';\r\n  }\r\n\r\n  hasContent(model) {\r\n    if (model.hasExtContent === undefined) {\r\n      model.hasExtContent = model.some(cf => cf.rules.some(CfRuleExtXform.isExt));\r\n    }\r\n    return model.hasExtContent;\r\n  }\r\n\r\n  prepare(model, options) {\r\n    model.forEach(cf => {\r\n      this.cfXform.prepare(cf, options);\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (this.hasContent(model)) {\r\n      xmlStream.openNode(this.tag);\r\n      model.forEach(cf => this.cfXform.render(xmlStream, cf));\r\n      xmlStream.closeNode();\r\n    }\r\n  }\r\n\r\n  createNewModel() {\r\n    return [];\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    // model is array of conditional formatting objects\r\n    this.model.push(parser.model);\r\n  }\r\n}\r\n\r\nmodule.exports = ConditionalFormattingsExtXform;\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEvD,IAAMC,cAAc,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACrD,IAAME,6BAA6B,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAAC,IAE9EG,8BAA8B,0BAAAC,eAAA;EAAAC,SAAA,CAAAF,8BAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,8BAAA;EAClC,SAAAA,+BAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,8BAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,GAAG,GAAG;MACT,2BAA2B,EAAGH,KAAA,CAAKI,OAAO,GAAG,IAAIV,6BAA6B,CAAC;IACjF,CAAC;IAAC,OAAAM,KAAA;EACJ;EAACK,YAAA,CAAAV,8BAAA;IAAAW,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,4BAA4B;IACrC;EAAC;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,WAAWC,KAAK,EAAE;MAChB,IAAIA,KAAK,CAACC,aAAa,KAAKC,SAAS,EAAE;QACrCF,KAAK,CAACC,aAAa,GAAGD,KAAK,CAACG,IAAI,CAAC,UAAAC,EAAE;UAAA,OAAIA,EAAE,CAACC,KAAK,CAACF,IAAI,CAACpB,cAAc,CAACuB,KAAK,CAAC;QAAA,EAAC;MAC7E;MACA,OAAON,KAAK,CAACC,aAAa;IAC5B;EAAC;IAAAL,GAAA;IAAAE,KAAA,EAED,SAAAS,QAAQP,KAAK,EAAEQ,OAAO,EAAE;MAAA,IAAAC,MAAA;MACtBT,KAAK,CAACU,OAAO,CAAC,UAAAN,EAAE,EAAI;QAClBK,MAAI,CAACf,OAAO,CAACa,OAAO,CAACH,EAAE,EAAEI,OAAO,CAAC;MACnC,CAAC,CAAC;IACJ;EAAC;IAAAZ,GAAA;IAAAE,KAAA,EAED,SAAAa,OAAOC,SAAS,EAAEZ,KAAK,EAAE;MAAA,IAAAa,MAAA;MACvB,IAAI,IAAI,CAACd,UAAU,CAACC,KAAK,CAAC,EAAE;QAC1BY,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACC,GAAG,CAAC;QAC5Bf,KAAK,CAACU,OAAO,CAAC,UAAAN,EAAE;UAAA,OAAIS,MAAI,CAACnB,OAAO,CAACiB,MAAM,CAACC,SAAS,EAAER,EAAE,CAAC;QAAA,EAAC;QACvDQ,SAAS,CAACI,SAAS,CAAC,CAAC;MACvB;IACF;EAAC;IAAApB,GAAA;IAAAE,KAAA,EAED,SAAAmB,eAAA,EAAiB;MACf,OAAO,EAAE;IACX;EAAC;IAAArB,GAAA;IAAAE,KAAA,EAED,SAAAoB,cAAcC,IAAI,EAAEC,MAAM,EAAE;MAC1B;MACA,IAAI,CAACpB,KAAK,CAACqB,IAAI,CAACD,MAAM,CAACpB,KAAK,CAAC;IAC/B;EAAC;EAAA,OAAAf,8BAAA;AAAA,EAzC0CJ,cAAc;AA4C3DyC,MAAM,CAACC,OAAO,GAAGtC,8BAA8B"}