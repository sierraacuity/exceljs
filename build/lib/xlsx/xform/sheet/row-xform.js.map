{"version":3,"file":"row-xform.js","names":["BaseXform","require","utils","CellXform","RowXform","_BaseXform","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","maxItems","map","c","_createClass","key","get","value","prepare","model","styleId","styles","addStyleModel","style","cellXform","cells","forEach","cellModel","render","xmlStream","openNode","addAttribute","number","height","hidden","min","max","concat","outlineLevel","collapsed","closeNode","parseOpen","node","parser","name","numRowsSeen","spans","attributes","split","span","parseInt","undefined","r","s","parseBoolean","bestFit","ht","parseFloat","parseText","text","parseClose","push","length","Error","reconcile","getStyleModel","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/row-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\r\nconst utils = require('../../../utils/utils');\r\n\r\nconst CellXform = require('./cell-xform');\r\n\r\nclass RowXform extends BaseXform {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.maxItems = options && options.maxItems;\r\n    this.map = {\r\n      c: new CellXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'row';\r\n  }\r\n\r\n  prepare(model, options) {\r\n    const styleId = options.styles.addStyleModel(model.style);\r\n    if (styleId) {\r\n      model.styleId = styleId;\r\n    }\r\n    const cellXform = this.map.c;\r\n    model.cells.forEach(cellModel => {\r\n      cellXform.prepare(cellModel, options);\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model, options) {\r\n    xmlStream.openNode('row');\r\n    xmlStream.addAttribute('r', model.number);\r\n    if (model.height) {\r\n      xmlStream.addAttribute('ht', model.height);\r\n      xmlStream.addAttribute('customHeight', '1');\r\n    }\r\n    if (model.hidden) {\r\n      xmlStream.addAttribute('hidden', '1');\r\n    }\r\n    if (model.min > 0 && model.max > 0 && model.min <= model.max) {\r\n      xmlStream.addAttribute('spans', `${model.min}:${model.max}`);\r\n    }\r\n    if (model.styleId) {\r\n      xmlStream.addAttribute('s', model.styleId);\r\n      xmlStream.addAttribute('customFormat', '1');\r\n    }\r\n    xmlStream.addAttribute('x14ac:dyDescent', '0.25');\r\n    if (model.outlineLevel) {\r\n      xmlStream.addAttribute('outlineLevel', model.outlineLevel);\r\n    }\r\n    if (model.collapsed) {\r\n      xmlStream.addAttribute('collapsed', '1');\r\n    }\r\n\r\n    const cellXform = this.map.c;\r\n    model.cells.forEach(cellModel => {\r\n      cellXform.render(xmlStream, cellModel, options);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    if (node.name === 'row') {\r\n      this.numRowsSeen += 1;\r\n      const spans = node.attributes.spans\r\n        ? node.attributes.spans.split(':').map(span => parseInt(span, 10))\r\n        : [undefined, undefined];\r\n      const model = (this.model = {\r\n        number: parseInt(node.attributes.r, 10),\r\n        min: spans[0],\r\n        max: spans[1],\r\n        cells: [],\r\n      });\r\n      if (node.attributes.s) {\r\n        model.styleId = parseInt(node.attributes.s, 10);\r\n      }\r\n      if (utils.parseBoolean(node.attributes.hidden)) {\r\n        model.hidden = true;\r\n      }\r\n      if (utils.parseBoolean(node.attributes.bestFit)) {\r\n        model.bestFit = true;\r\n      }\r\n      if (node.attributes.ht) {\r\n        model.height = parseFloat(node.attributes.ht);\r\n      }\r\n      if (node.attributes.outlineLevel) {\r\n        model.outlineLevel = parseInt(node.attributes.outlineLevel, 10);\r\n      }\r\n      if (utils.parseBoolean(node.attributes.collapsed)) {\r\n        model.collapsed = true;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    this.parser = this.map[node.name];\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.cells.push(this.parser.model);\r\n        if (this.maxItems && this.model.cells.length > this.maxItems) {\r\n          throw new Error(`Max column count (${this.maxItems}) exceeded`);\r\n        }\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    model.style = model.styleId ? options.styles.getStyleModel(model.styleId) : {};\r\n    if (model.styleId !== undefined) {\r\n      model.styleId = undefined;\r\n    }\r\n\r\n    const cellXform = this.map.c;\r\n    model.cells.forEach(cellModel => {\r\n      cellXform.reconcile(cellModel, options);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = RowXform;\r\n"],"mappings":"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"}