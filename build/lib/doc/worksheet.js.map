{"version":3,"file":"worksheet.js","names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","Encryptor","_require","copyStyle","Worksheet","options","_classCallCheck","_workbook","workbook","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","conditionalFormattings","_createClass","key","get","_name","set","concat","Error","test","length","console","warn","substring","_worksheets","find","ws","toLowerCase","value","destroy","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","_this","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","count","columns","defn","column","push","getColumnKey","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","spliceColumns","start","_this2","rows","nRows","_len","arguments","inserts","Array","_key","_loop","i","rowArguments","insert","getRow","splice","apply","r","nExpand","nKeep","nEnd","definedNames","columnCount","maxCount","eachRow","cellCount","counts","eachCell","_ref","_commitRow","_lastRowNumber","findRow","findRows","slice","getRows","addRow","style","rowNo","_nextRow","values","_setStyleOption","addRows","_this3","insertRow","pos","spliceRows","insertRows","_toConsumableArray","_copyStyle","src","dest","styleEmpty","rSrc","rDst","includeEmpty","cell","colNumber","getCell","height","duplicateRow","rowNum","_this4","fill","_loop2","_this5","_len2","_key2","nInserts","_loop3","_loop4","_value","constructor","cellToBeMerged","_row","_number","prevMaster","_master","newMaster","_column","merge","iteratee","hasValues","getSheetValues","findCell","address","getAddress","getCellEx","mergeCells","_len3","cells","_key3","_mergeCellsInternal","mergeCellsWithoutStyle","_len4","_key4","ignoreStyle","intersects","master","j","_unMergeMaster","unmerge","some","Boolean","unMergeCells","_len5","_key5","type","ValueType","Merge","fillFormula","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","addImage","imageId","model","getImages","filter","m","addBackgroundImage","getBackgroundImageId","image","protect","password","_this6","Promise","resolve","sheet","spinCount","Number","isFinite","round","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","unprotect","addTable","table","getTable","removeTable","getTables","addConditionalFormatting","cf","removeConditionalFormatting","Function","trace","tabColor","media","map","medium","cols","toModel","rowModel","merges","_this7","fromModel","_parseRows","_parseMergeCells","t","_this8","_this9","module","exports"],"sources":["../../../lib/doc/worksheet.js"],"sourcesContent":["const _ = require('../utils/under-dash');\r\n\r\nconst colCache = require('../utils/col-cache');\r\nconst Range = require('./range');\r\nconst Row = require('./row');\r\nconst Column = require('./column');\r\nconst Enums = require('./enums');\r\nconst Image = require('./image');\r\nconst Table = require('./table');\r\nconst DataValidations = require('./data-validations');\r\nconst Encryptor = require('../utils/encryptor');\r\nconst {copyStyle} = require('../utils/copy-style');\r\n\r\n// Worksheet requirements\r\n//  Operate as sheet inside workbook or standalone\r\n//  Load and Save from file and stream\r\n//  Access/Add/Delete individual cells\r\n//  Manage column widths and row heights\r\n\r\nclass Worksheet {\r\n  constructor(options) {\r\n    options = options || {};\r\n    this._workbook = options.workbook;\r\n\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n    this.orderNo = options.orderNo;\r\n\r\n    // and a name\r\n    this.name = options.name;\r\n\r\n    // add a state\r\n    this.state = options.state || 'visible';\r\n\r\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\r\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\r\n    this._rows = [];\r\n\r\n    // column definitions\r\n    this._columns = null;\r\n\r\n    // column keys (addRow convenience): key ==> this._collumns index\r\n    this._keys = {};\r\n\r\n    // keep record of all merges\r\n    this._merges = {};\r\n\r\n    // record of all row and column pageBreaks\r\n    this.rowBreaks = [];\r\n\r\n    // for tabColor, default row height, outline levels, etc\r\n    this.properties = Object.assign(\r\n      {},\r\n      {\r\n        defaultRowHeight: 15,\r\n        dyDescent: 55,\r\n        outlineLevelCol: 0,\r\n        outlineLevelRow: 0,\r\n      },\r\n      options.properties\r\n    );\r\n\r\n    // for all things printing\r\n    this.pageSetup = Object.assign(\r\n      {},\r\n      {\r\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\r\n        orientation: 'portrait',\r\n        horizontalDpi: 4294967295,\r\n        verticalDpi: 4294967295,\r\n        fitToPage: !!(\r\n          options.pageSetup &&\r\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\r\n          !options.pageSetup.scale\r\n        ),\r\n        pageOrder: 'downThenOver',\r\n        blackAndWhite: false,\r\n        draft: false,\r\n        cellComments: 'None',\r\n        errors: 'displayed',\r\n        scale: 100,\r\n        fitToWidth: 1,\r\n        fitToHeight: 1,\r\n        paperSize: undefined,\r\n        showRowColHeaders: false,\r\n        showGridLines: false,\r\n        firstPageNumber: undefined,\r\n        horizontalCentered: false,\r\n        verticalCentered: false,\r\n        rowBreaks: null,\r\n        colBreaks: null,\r\n      },\r\n      options.pageSetup\r\n    );\r\n\r\n    this.headerFooter = Object.assign(\r\n      {},\r\n      {\r\n        differentFirst: false,\r\n        differentOddEven: false,\r\n        oddHeader: null,\r\n        oddFooter: null,\r\n        evenHeader: null,\r\n        evenFooter: null,\r\n        firstHeader: null,\r\n        firstFooter: null,\r\n      },\r\n      options.headerFooter\r\n    );\r\n\r\n    this.dataValidations = new DataValidations();\r\n\r\n    // for freezepanes, split, zoom, gridlines, etc\r\n    this.views = options.views || [];\r\n\r\n    this.autoFilter = options.autoFilter || null;\r\n\r\n    // for images, etc\r\n    this._media = [];\r\n\r\n    // worksheet protection\r\n    this.sheetProtection = null;\r\n\r\n    // for tables\r\n    this.tables = {};\r\n\r\n    this.conditionalFormattings = [];\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(name) {\r\n    if (name === undefined) {\r\n      name = `sheet${this.id}`;\r\n    }\r\n\r\n    if (this._name === name) return;\r\n\r\n    if (typeof name !== 'string') {\r\n      throw new Error('The name has to be a string.');\r\n    }\r\n\r\n    if (name === '') {\r\n      throw new Error('The name can\\'t be empty.');\r\n    }\r\n\r\n    if (name === 'History') {\r\n      throw new Error('The name \"History\" is protected. Please use a different name.');\r\n    }\r\n\r\n    // Illegal character in worksheet name: asterisk (*), question mark (?),\r\n    // colon (:), forward slash (/ \\), or bracket ([])\r\n    if (/[*?:/\\\\[\\]]/.test(name)) {\r\n      throw new Error(`Worksheet name ${name} cannot include any of the following characters: * ? : \\\\ / [ ]`);\r\n    }\r\n\r\n    if (/(^')|('$)/.test(name)) {\r\n      throw new Error(`The first or last character of worksheet name cannot be a single quotation mark: ${name}`);\r\n    }\r\n\r\n    if (name && name.length > 31) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`Worksheet name ${name} exceeds 31 chars. This will be truncated`);\r\n      name = name.substring(0, 31);\r\n    }\r\n\r\n    if (this._workbook._worksheets.find(ws => ws && ws.name.toLowerCase() === name.toLowerCase())) {\r\n      throw new Error(`Worksheet name already exists: ${name}`);\r\n    }\r\n\r\n    this._name = name;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._workbook;\r\n  }\r\n\r\n  // when you're done with this worksheet, call this to remove from workbook\r\n  destroy() {\r\n    this._workbook.removeWorksheetEx(this);\r\n  }\r\n\r\n  // Get the bounding range of the cells in this worksheet\r\n  get dimensions() {\r\n    const dimensions = new Range();\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        const rowDims = row.dimensions;\r\n        if (rowDims) {\r\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\r\n        }\r\n      }\r\n    });\r\n    return dimensions;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Columns\r\n\r\n  // get the current columns array.\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  // set the columns from an array of column definitions.\r\n  // Note: any headers defined will overwrite existing values.\r\n  set columns(value) {\r\n    // calculate max header row count\r\n    this._headerRowCount = value.reduce((pv, cv) => {\r\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\r\n      return Math.max(pv, headerCount);\r\n    }, 0);\r\n\r\n    // construct Column objects\r\n    let count = 1;\r\n    const columns = (this._columns = []);\r\n    value.forEach(defn => {\r\n      const column = new Column(this, count++, false);\r\n      columns.push(column);\r\n      column.defn = defn;\r\n    });\r\n  }\r\n\r\n  getColumnKey(key) {\r\n    return this._keys[key];\r\n  }\r\n\r\n  setColumnKey(key, value) {\r\n    this._keys[key] = value;\r\n  }\r\n\r\n  deleteColumnKey(key) {\r\n    delete this._keys[key];\r\n  }\r\n\r\n  eachColumnKey(f) {\r\n    _.each(this._keys, f);\r\n  }\r\n\r\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\r\n  getColumn(c) {\r\n    if (typeof c === 'string') {\r\n      // if it matches a key'd column, return that\r\n      const col = this._keys[c];\r\n      if (col) return col;\r\n\r\n      // otherwise, assume letter\r\n      c = colCache.l2n(c);\r\n    }\r\n    if (!this._columns) {\r\n      this._columns = [];\r\n    }\r\n    if (c > this._columns.length) {\r\n      let n = this._columns.length + 1;\r\n      while (n <= c) {\r\n        this._columns.push(new Column(this, n++));\r\n      }\r\n    }\r\n    return this._columns[c - 1];\r\n  }\r\n\r\n  spliceColumns(start, count, ...inserts) {\r\n    const rows = this._rows;\r\n    const nRows = rows.length;\r\n    if (inserts.length > 0) {\r\n      // must iterate over all rows whether they exist yet or not\r\n      for (let i = 0; i < nRows; i++) {\r\n        const rowArguments = [start, count];\r\n        // eslint-disable-next-line no-loop-func\r\n        inserts.forEach(insert => {\r\n          rowArguments.push(insert[i] || null);\r\n        });\r\n        const row = this.getRow(i + 1);\r\n        // eslint-disable-next-line prefer-spread\r\n        row.splice.apply(row, rowArguments);\r\n      }\r\n    } else {\r\n      // nothing to insert, so just splice all rows\r\n      this._rows.forEach(r => {\r\n        if (r) {\r\n          r.splice(start, count);\r\n        }\r\n      });\r\n    }\r\n\r\n    // splice column definitions\r\n    const nExpand = inserts.length - count;\r\n    const nKeep = start + count;\r\n    const nEnd = this._columns.length;\r\n    if (nExpand < 0) {\r\n      for (let i = start + inserts.length; i <= nEnd; i++) {\r\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\r\n      }\r\n    } else if (nExpand > 0) {\r\n      for (let i = nEnd; i >= nKeep; i--) {\r\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\r\n      }\r\n    }\r\n    for (let i = start; i < start + inserts.length; i++) {\r\n      this.getColumn(i).defn = null;\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\r\n  }\r\n\r\n  get lastColumn() {\r\n    return this.getColumn(this.columnCount);\r\n  }\r\n\r\n  get columnCount() {\r\n    let maxCount = 0;\r\n    this.eachRow(row => {\r\n      maxCount = Math.max(maxCount, row.cellCount);\r\n    });\r\n    return maxCount;\r\n  }\r\n\r\n  get actualColumnCount() {\r\n    // performance nightmare - for each row, counts all the columns used\r\n    const counts = [];\r\n    let count = 0;\r\n    this.eachRow(row => {\r\n      row.eachCell(({col}) => {\r\n        if (!counts[col]) {\r\n          counts[col] = true;\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Rows\r\n\r\n  _commitRow() {\r\n    // nop - allows streaming reader to fill a document\r\n  }\r\n\r\n  get _lastRowNumber() {\r\n    // need to cope with results of splice\r\n    const rows = this._rows;\r\n    let n = rows.length;\r\n    while (n > 0 && rows[n - 1] === undefined) {\r\n      n--;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  get _nextRow() {\r\n    return this._lastRowNumber + 1;\r\n  }\r\n\r\n  get lastRow() {\r\n    if (this._rows.length) {\r\n      return this._rows[this._rows.length - 1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // find a row (if exists) by row number\r\n  findRow(r) {\r\n    return this._rows[r - 1];\r\n  }\r\n\r\n  // find multiple rows (if exists) by row number\r\n  findRows(start, length) {\r\n    return this._rows.slice(start - 1, start - 1 + length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return this._lastRowNumber;\r\n  }\r\n\r\n  get actualRowCount() {\r\n    // counts actual rows that have actual data\r\n    let count = 0;\r\n    this.eachRow(() => {\r\n      count++;\r\n    });\r\n    return count;\r\n  }\r\n\r\n  // get a row by row number.\r\n  getRow(r) {\r\n    let row = this._rows[r - 1];\r\n    if (!row) {\r\n      row = this._rows[r - 1] = new Row(this, r);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  // get multiple rows by row number.\r\n  getRows(start, length) {\r\n    if (length < 1) return undefined;\r\n    const rows = [];\r\n    for (let i = start; i < start + length; i++) {\r\n      rows.push(this.getRow(i));\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  addRow(value, style = 'n') {\r\n    const rowNo = this._nextRow;\r\n    const row = this.getRow(rowNo);\r\n    row.values = value;\r\n    this._setStyleOption(rowNo, style[0] === 'i' ? style : 'n');\r\n    return row;\r\n  }\r\n\r\n  addRows(value, style = 'n') {\r\n    const rows = [];\r\n    value.forEach(row => {\r\n      rows.push(this.addRow(row, style));\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  insertRow(pos, value, style = 'n') {\r\n    this.spliceRows(pos, 0, value);\r\n    this._setStyleOption(pos, style);\r\n    return this.getRow(pos);\r\n  }\r\n\r\n  insertRows(pos, values, style = 'n') {\r\n    this.spliceRows(pos, 0, ...values);\r\n    if (style !== 'n') {\r\n      // copy over the styles\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (style[0] === 'o' && this.findRow(values.length + pos + i) !== undefined) {\r\n          this._copyStyle(values.length + pos + i, pos + i, style[1] === '+');\r\n        } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n          this._copyStyle(pos - 1, pos + i, style[1] === '+');\r\n        }\r\n      }\r\n    }\r\n    return this.getRows(pos, values.length);\r\n  }\r\n\r\n  // set row at position to same style as of either pervious row (option 'i') or next row (option 'o')\r\n  _setStyleOption(pos, style = 'n') {\r\n    if (style[0] === 'o' && this.findRow(pos + 1) !== undefined) {\r\n      this._copyStyle(pos + 1, pos, style[1] === '+');\r\n    } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\r\n      this._copyStyle(pos - 1, pos, style[1] === '+');\r\n    }\r\n  }\r\n\r\n  _copyStyle(src, dest, styleEmpty = false) {\r\n    const rSrc = this.getRow(src);\r\n    const rDst = this.getRow(dest);\r\n    rDst.style = copyStyle(rSrc.style);\r\n    // eslint-disable-next-line no-loop-func\r\n    rSrc.eachCell({includeEmpty: styleEmpty}, (cell, colNumber) => {\r\n      rDst.getCell(colNumber).style = copyStyle(cell.style);\r\n    });\r\n    rDst.height = rSrc.height;\r\n  }\r\n\r\n  duplicateRow(rowNum, count, insert = false) {\r\n    // create count duplicates of rowNum\r\n    // either inserting new or overwriting existing rows\r\n\r\n    const rSrc = this._rows[rowNum - 1];\r\n    const inserts = new Array(count).fill(rSrc.values);\r\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\r\n\r\n    // now copy styles...\r\n    for (let i = 0; i < count; i++) {\r\n      const rDst = this._rows[rowNum + i];\r\n      rDst.style = rSrc.style;\r\n      rDst.height = rSrc.height;\r\n      // eslint-disable-next-line no-loop-func\r\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n        rDst.getCell(colNumber).style = cell.style;\r\n      });\r\n    }\r\n  }\r\n\r\n  spliceRows(start, count, ...inserts) {\r\n    // same problem as row.splice, except worse.\r\n    const nKeep = start + count;\r\n    const nInserts = inserts.length;\r\n    const nExpand = nInserts - count;\r\n    const nEnd = this._rows.length;\r\n    let i;\r\n    let rSrc;\r\n    if (nExpand < 0) {\r\n      // remove rows\r\n      if (start === nEnd) {\r\n        this._rows[nEnd - 1] = undefined;\r\n      }\r\n      for (i = nKeep; i <= nEnd; i++) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n          });\r\n          this._rows[i - 1] = undefined;\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    } else if (nExpand > 0) {\r\n      // insert new cells\r\n      for (i = nEnd; i >= nKeep; i--) {\r\n        rSrc = this._rows[i - 1];\r\n        if (rSrc) {\r\n          const rDst = this.getRow(i + nExpand);\r\n          rDst.values = rSrc.values;\r\n          rDst.style = rSrc.style;\r\n          rDst.height = rSrc.height;\r\n          // eslint-disable-next-line no-loop-func\r\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\r\n            rDst.getCell(colNumber).style = cell.style;\r\n\r\n            // remerge cells accounting for insert offset\r\n            if (cell._value.constructor.name === 'MergeValue') {\r\n              const cellToBeMerged = this.getRow(cell._row._number + nInserts).getCell(colNumber);\r\n              const prevMaster = cell._value._master;\r\n              const newMaster = this.getRow(prevMaster._row._number + nInserts).getCell(prevMaster._column._number);\r\n              cellToBeMerged.merge(newMaster);\r\n            }\r\n          });\r\n        } else {\r\n          this._rows[i + nExpand - 1] = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    // now copy over the new values\r\n    for (i = 0; i < nInserts; i++) {\r\n      const rDst = this.getRow(start + i);\r\n      rDst.style = {};\r\n      rDst.values = inserts[i];\r\n    }\r\n\r\n    // account for defined names\r\n    this.workbook.definedNames.spliceRows(this.name, start, count, nInserts);\r\n  }\r\n\r\n  // iterate over every row in the worksheet, including maybe empty rows\r\n  eachRow(options, iteratee) {\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = undefined;\r\n    }\r\n    if (options && options.includeEmpty) {\r\n      const n = this._rows.length;\r\n      for (let i = 1; i <= n; i++) {\r\n        iteratee(this.getRow(i), i);\r\n      }\r\n    } else {\r\n      this._rows.forEach(row => {\r\n        if (row && row.hasValues) {\r\n          iteratee(row, row.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // return all rows as sparse array\r\n  getSheetValues() {\r\n    const rows = [];\r\n    this._rows.forEach(row => {\r\n      if (row) {\r\n        rows[row.number] = row.values;\r\n      }\r\n    });\r\n    return rows;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Cells\r\n\r\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\r\n  findCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this._rows[address.row - 1];\r\n    return row ? row.findCell(address.col) : undefined;\r\n  }\r\n\r\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\r\n  getCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.getRow(address.row);\r\n    return row.getCellEx(address);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Merge\r\n\r\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\r\n  mergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions);\r\n  }\r\n\r\n  mergeCellsWithoutStyle(...cells) {\r\n    const dimensions = new Range(cells);\r\n    this._mergeCellsInternal(dimensions, true);\r\n  }\r\n\r\n  _mergeCellsInternal(dimensions, ignoreStyle) {\r\n    // check cells aren't already merged\r\n    _.each(this._merges, merge => {\r\n      if (merge.intersects(dimensions)) {\r\n        throw new Error('Cannot merge already merged cells');\r\n      }\r\n    });\r\n\r\n    // apply merge\r\n    const master = this.getCell(dimensions.top, dimensions.left);\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        // merge all but the master cell\r\n        if (i > dimensions.top || j > dimensions.left) {\r\n          this.getCell(i, j).merge(master, ignoreStyle);\r\n        }\r\n      }\r\n    }\r\n\r\n    // index merge\r\n    this._merges[master.address] = dimensions;\r\n  }\r\n\r\n  _unMergeMaster(master) {\r\n    // master is always top left of a rectangle\r\n    const merge = this._merges[master.address];\r\n    if (merge) {\r\n      for (let i = merge.top; i <= merge.bottom; i++) {\r\n        for (let j = merge.left; j <= merge.right; j++) {\r\n          this.getCell(i, j).unmerge();\r\n        }\r\n      }\r\n      delete this._merges[master.address];\r\n    }\r\n  }\r\n\r\n  get hasMerges() {\r\n    // return true if this._merges has a merge object\r\n    return _.some(this._merges, Boolean);\r\n  }\r\n\r\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\r\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\r\n  // atomic - either they're all merged or all un-merged.\r\n  unMergeCells(...cells) {\r\n    const dimensions = new Range(cells);\r\n\r\n    // find any cells in that range and unmerge them\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        const cell = this.findCell(i, j);\r\n        if (cell) {\r\n          if (cell.type === Enums.ValueType.Merge) {\r\n            // this cell merges to another master\r\n            this._unMergeMaster(cell.master);\r\n          } else if (this._merges[cell.address]) {\r\n            // this cell is a master\r\n            this._unMergeMaster(cell);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Shared/Array Formula\r\n  fillFormula(range, formula, results, shareType = 'shared') {\r\n    // Define formula for top-left cell and share to rest\r\n    const decoded = colCache.decode(range);\r\n    const {top, left, bottom, right} = decoded;\r\n    const width = right - left + 1;\r\n    const masterAddress = colCache.encodeAddress(top, left);\r\n    const isShared = shareType === 'shared';\r\n\r\n    // work out result accessor\r\n    let getResult;\r\n    if (typeof results === 'function') {\r\n      getResult = results;\r\n    } else if (Array.isArray(results)) {\r\n      if (Array.isArray(results[0])) {\r\n        getResult = (row, col) => results[row - top][col - left];\r\n      } else {\r\n        // eslint-disable-next-line no-mixed-operators\r\n        getResult = (row, col) => results[(row - top) * width + (col - left)];\r\n      }\r\n    } else {\r\n      getResult = () => undefined;\r\n    }\r\n    let first = true;\r\n    for (let r = top; r <= bottom; r++) {\r\n      for (let c = left; c <= right; c++) {\r\n        if (first) {\r\n          this.getCell(r, c).value = {\r\n            shareType,\r\n            formula,\r\n            ref: range,\r\n            result: getResult(r, c),\r\n          };\r\n          first = false;\r\n        } else {\r\n          this.getCell(r, c).value = isShared\r\n            ? {\r\n                sharedFormula: masterAddress,\r\n                result: getResult(r, c),\r\n              }\r\n            : getResult(r, c);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n  // Images\r\n  addImage(imageId, range) {\r\n    const model = {\r\n      type: 'image',\r\n      imageId,\r\n      range,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getImages() {\r\n    return this._media.filter(m => m.type === 'image');\r\n  }\r\n\r\n  addBackgroundImage(imageId) {\r\n    const model = {\r\n      type: 'background',\r\n      imageId,\r\n    };\r\n    this._media.push(new Image(this, model));\r\n  }\r\n\r\n  getBackgroundImageId() {\r\n    const image = this._media.find(m => m.type === 'background');\r\n    return image && image.imageId;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Worksheet Protection\r\n  protect(password, options) {\r\n    // TODO: make this function truly async\r\n    // perhaps marshal to worker thread or something\r\n    return new Promise(resolve => {\r\n      this.sheetProtection = {\r\n        sheet: true,\r\n      };\r\n      if (options && 'spinCount' in options) {\r\n        // force spinCount to be integer >= 0\r\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\r\n      }\r\n      if (password) {\r\n        this.sheetProtection.algorithmName = 'SHA-512';\r\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\r\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\r\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\r\n          password,\r\n          'SHA512',\r\n          this.sheetProtection.saltValue,\r\n          this.sheetProtection.spinCount\r\n        );\r\n      }\r\n      if (options) {\r\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\r\n        if (!password && 'spinCount' in options) {\r\n          delete this.sheetProtection.spinCount;\r\n        }\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  unprotect() {\r\n    this.sheetProtection = null;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Tables\r\n  addTable(model) {\r\n    const table = new Table(this, model);\r\n    this.tables[model.name] = table;\r\n    return table;\r\n  }\r\n\r\n  getTable(name) {\r\n    return this.tables[name];\r\n  }\r\n\r\n  removeTable(name) {\r\n    delete this.tables[name];\r\n  }\r\n\r\n  getTables() {\r\n    return Object.values(this.tables);\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Conditional Formatting\r\n  addConditionalFormatting(cf) {\r\n    this.conditionalFormattings.push(cf);\r\n  }\r\n\r\n  removeConditionalFormatting(filter) {\r\n    if (typeof filter === 'number') {\r\n      this.conditionalFormattings.splice(filter, 1);\r\n    } else if (filter instanceof Function) {\r\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\r\n    } else {\r\n      this.conditionalFormattings = [];\r\n    }\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Deprecated\r\n  get tabColor() {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    return this.properties.tabColor;\r\n  }\r\n\r\n  set tabColor(value) {\r\n    // eslint-disable-next-line no-console\r\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\r\n    this.properties.tabColor = value;\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Model\r\n\r\n  get model() {\r\n    const model = {\r\n      id: this.id,\r\n      name: this.name,\r\n      dataValidations: this.dataValidations.model,\r\n      properties: this.properties,\r\n      state: this.state,\r\n      pageSetup: this.pageSetup,\r\n      headerFooter: this.headerFooter,\r\n      rowBreaks: this.rowBreaks,\r\n      views: this.views,\r\n      autoFilter: this.autoFilter,\r\n      media: this._media.map(medium => medium.model),\r\n      sheetProtection: this.sheetProtection,\r\n      tables: Object.values(this.tables).map(table => table.model),\r\n      conditionalFormattings: this.conditionalFormattings,\r\n    };\r\n\r\n    // =================================================\r\n    // columns\r\n    model.cols = Column.toModel(this.columns);\r\n\r\n    // ==========================================================\r\n    // Rows\r\n    const rows = (model.rows = []);\r\n    const dimensions = (model.dimensions = new Range());\r\n    this._rows.forEach(row => {\r\n      const rowModel = row && row.model;\r\n      if (rowModel) {\r\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\r\n        rows.push(rowModel);\r\n      }\r\n    });\r\n\r\n    // ==========================================================\r\n    // Merges\r\n    model.merges = [];\r\n    _.each(this._merges, merge => {\r\n      model.merges.push(merge.range);\r\n    });\r\n\r\n    return model;\r\n  }\r\n\r\n  _parseRows(model) {\r\n    this._rows = [];\r\n    model.rows.forEach(rowModel => {\r\n      const row = new Row(this, rowModel.number);\r\n      this._rows[row.number - 1] = row;\r\n      row.model = rowModel;\r\n    });\r\n  }\r\n\r\n  _parseMergeCells(model) {\r\n    _.each(model.mergeCells, merge => {\r\n      // Do not merge styles when importing an Excel file\r\n      // since each cell may have different styles intentionally.\r\n      this.mergeCellsWithoutStyle(merge);\r\n    });\r\n  }\r\n\r\n  set model(value) {\r\n    this.name = value.name;\r\n    this._columns = Column.fromModel(this, value.cols);\r\n    this._parseRows(value);\r\n\r\n    this._parseMergeCells(value);\r\n    this.dataValidations = new DataValidations(value.dataValidations);\r\n    this.properties = value.properties;\r\n    this.pageSetup = value.pageSetup;\r\n    this.headerFooter = value.headerFooter;\r\n    this.views = value.views;\r\n    this.autoFilter = value.autoFilter;\r\n    this._media = value.media.map(medium => new Image(this, medium));\r\n    this.sheetProtection = value.sheetProtection;\r\n    this.tables = value.tables.reduce((tables, table) => {\r\n      const t = new Table();\r\n      t.model = table;\r\n      tables[table.name] = t;\r\n      return tables;\r\n    }, {});\r\n    this.conditionalFormattings = value.conditionalFormattings;\r\n  }\r\n}\r\n\r\nmodule.exports = Worksheet;\r\n"],"mappings":"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"}