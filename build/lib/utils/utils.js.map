{"version":3,"file":"utils.js","names":["fs","require","inherits","cls","superCtor","statics","prototype","super_","Object","keys","forEach","i","defineProperty","getOwnPropertyDescriptor","properties","constructor","value","enumerable","writable","configurable","create","xmlDecodeRegex","utils","nop","promiseImmediate","Promise","resolve","global","setImmediate","setTimeout","dateToExcel","d","date1904","getTime","excelToDate","v","millisecondSinceEpoch","Math","round","Date","parsePath","filepath","last","lastIndexOf","path","substring","name","getRelsPath","concat","xmlEncode","text","regexResult","exec","result","escape","lastIndex","index","length","charCode","charCodeAt","xmlDecode","replace","c","validInt","parseInt","Number","isNaN","isDateFmt","fmt","match","exists","access","constants","F_OK","err","toIsoDateString","dt","toIsoString","subsstr","parseBoolean","module","exports"],"sources":["../../../lib/utils/utils.js"],"sourcesContent":["const fs = require('fs');\r\n\r\n// useful stuff\r\nconst inherits = function(cls, superCtor, statics, prototype) {\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  cls.super_ = superCtor;\r\n\r\n  if (!prototype) {\r\n    prototype = statics;\r\n    statics = null;\r\n  }\r\n\r\n  if (statics) {\r\n    Object.keys(statics).forEach(i => {\r\n      Object.defineProperty(cls, i, Object.getOwnPropertyDescriptor(statics, i));\r\n    });\r\n  }\r\n\r\n  const properties = {\r\n    constructor: {\r\n      value: cls,\r\n      enumerable: false,\r\n      writable: false,\r\n      configurable: true,\r\n    },\r\n  };\r\n  if (prototype) {\r\n    Object.keys(prototype).forEach(i => {\r\n      properties[i] = Object.getOwnPropertyDescriptor(prototype, i);\r\n    });\r\n  }\r\n\r\n  cls.prototype = Object.create(superCtor.prototype, properties);\r\n};\r\n\r\n// eslint-disable-next-line no-control-regex\r\nconst xmlDecodeRegex = /[<>&'\"\\x7F\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F]/;\r\nconst utils = {\r\n  nop() {},\r\n  promiseImmediate(value) {\r\n    return new Promise(resolve => {\r\n      if (global.setImmediate) {\r\n        setImmediate(() => {\r\n          resolve(value);\r\n        });\r\n      } else {\r\n        // poorman's setImmediate - must wait at least 1ms\r\n        setTimeout(() => {\r\n          resolve(value);\r\n        }, 1);\r\n      }\r\n    });\r\n  },\r\n  inherits,\r\n  dateToExcel(d, date1904) {\r\n    return 25569 + ( d.getTime() / (24 * 3600 * 1000) ) - (date1904 ? 1462 : 0);\r\n  },\r\n  excelToDate(v, date1904) {\r\n    const millisecondSinceEpoch = Math.round((v - 25569 + (date1904 ? 1462 : 0)) * 24 * 3600 * 1000);\r\n    return new Date(millisecondSinceEpoch);\r\n  },\r\n  parsePath(filepath) {\r\n    const last = filepath.lastIndexOf('/');\r\n    return {\r\n      path: filepath.substring(0, last),\r\n      name: filepath.substring(last + 1),\r\n    };\r\n  },\r\n  getRelsPath(filepath) {\r\n    const path = utils.parsePath(filepath);\r\n    return `${path.path}/_rels/${path.name}.rels`;\r\n  },\r\n  xmlEncode(text) {\r\n    const regexResult = xmlDecodeRegex.exec(text);\r\n    if (!regexResult) return text;\r\n\r\n    let result = '';\r\n    let escape = '';\r\n    let lastIndex = 0;\r\n    let i = regexResult.index;\r\n    for (; i < text.length; i++) {\r\n      const charCode = text.charCodeAt(i);\r\n      switch (charCode) {\r\n        case 34: // \"\r\n          escape = '&quot;';\r\n          break;\r\n        case 38: // &\r\n          escape = '&amp;';\r\n          break;\r\n        case 39: // '\r\n          escape = '&apos;';\r\n          break;\r\n        case 60: // <\r\n          escape = '&lt;';\r\n          break;\r\n        case 62: // >\r\n          escape = '&gt;';\r\n          break;\r\n        case 127:\r\n          escape = '';\r\n          break;\r\n        default: {\r\n          if (charCode <= 31 && (charCode <= 8 || (charCode >= 11 && charCode !== 13))) {\r\n            escape = '';\r\n            break;\r\n          }\r\n          continue;\r\n        }\r\n      }\r\n      if (lastIndex !== i) result += text.substring(lastIndex, i);\r\n      lastIndex = i + 1;\r\n      if (escape) result += escape;\r\n    }\r\n    if (lastIndex !== i) return result + text.substring(lastIndex, i);\r\n    return result;\r\n  },\r\n  xmlDecode(text) {\r\n    return text.replace(/&([a-z]*);/g, c => {\r\n      switch (c) {\r\n        case '&lt;':\r\n          return '<';\r\n        case '&gt;':\r\n          return '>';\r\n        case '&amp;':\r\n          return '&';\r\n        case '&apos;':\r\n          return '\\'';\r\n        case '&quot;':\r\n          return '\"';\r\n        default:\r\n          return c;\r\n      }\r\n    });\r\n  },\r\n  validInt(value) {\r\n    const i = parseInt(value, 10);\r\n    return !Number.isNaN(i) ? i : 0;\r\n  },\r\n\r\n  isDateFmt(fmt) {\r\n    if (!fmt) {\r\n      return false;\r\n    }\r\n\r\n    // must remove all chars inside quotes and []\r\n    fmt = fmt.replace(/\\[[^\\]]*]/g, '');\r\n    fmt = fmt.replace(/\"[^\"]*\"/g, '');\r\n    // then check for date formatting chars\r\n    const result = fmt.match(/[ymdhMsb]+/) !== null;\r\n    return result;\r\n  },\r\n\r\n  fs: {\r\n    exists(path) {\r\n      return new Promise(resolve => {\r\n        fs.access(path, fs.constants.F_OK, err => {\r\n          resolve(!err);\r\n        });\r\n      });\r\n    },\r\n  },\r\n\r\n  toIsoDateString(dt) {\r\n    return dt.toIsoString().subsstr(0, 10);\r\n  },\r\n\r\n  parseBoolean(value) {\r\n    return value === true || value === 'true' || value === 1 || value === '1';\r\n  },\r\n};\r\n\r\nmodule.exports = utils;\r\n"],"mappings":"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"}