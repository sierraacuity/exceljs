{"version":3,"file":"worksheet-writer.js","names":["_","require","RelType","colCache","Encryptor","Dimensions","StringBuf","Row","Column","SheetRelsWriter","SheetCommentsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","ConditionalFormattingsXform","HeaderFooterXform","RowBreaksXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","sheetProtection","pageMargins","pageSeteup","autoFilter","picture","conditionalFormattings","headerFooter","rowBreaks","WorksheetWriter","options","_classCallCheck","id","name","concat","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_sheetCommentsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","conditionalFormatting","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","colBreaks","useSharedStrings","_workbook","workbook","hasComments","_views","views","_media","_writeOpenWorksheet","startedData","_createClass","key","get","_stream","_openStream","pause","value","destroy","Error","commit","_this","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeConditionalFormatting","_writeDataValidations","_writeSheetProtection","_writePageMargins","_writePageSetup","_writeBackground","_writeHeaderFooter","_writeRowBreaks","_writeLegacyData","_writeCloseWorksheet","stream","end","set","_this2","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","defn","column","push","getColumnKey","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","eachRow","iteratee","includeEmpty","_nextRow","i","getRow","hasValues","number","_commitRow","found","shift","findRow","rowNumber","index","addRow","values","findCell","r","address","getAddress","getCell","getCellEx","mergeCells","_len","arguments","cells","Array","_key","dimensions","merge","intersects","master","j","addConditionalFormatting","cf","removeConditionalFormatting","filter","splice","Function","addBackgroundImage","imageId","_background","getBackgroundImageId","protect","password","_this3","Promise","resolve","sheet","spinCount","Number","isFinite","round","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","unprotect","_write","text","reset","addText","write","_writeSheetProperties","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","_writeSheetFormatProperties","sheetFormatPropertiesModel","defaultColWidth","_writeColumns","cols","toModel","prepare","styles","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","comments","addComments","_hyperlinks","image","getImage","pictureId","addMedia","Target","Type","Image","_objectSpread","rId","vmlRelId","_writeDimensions","module","exports"],"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"sourcesContent":["const _ = require('../../utils/under-dash');\r\n\r\nconst RelType = require('../../xlsx/rel-type');\r\n\r\nconst colCache = require('../../utils/col-cache');\r\nconst Encryptor = require('../../utils/encryptor');\r\nconst Dimensions = require('../../doc/range');\r\nconst StringBuf = require('../../utils/string-buf');\r\n\r\nconst Row = require('../../doc/row');\r\nconst Column = require('../../doc/column');\r\n\r\nconst SheetRelsWriter = require('./sheet-rels-writer');\r\nconst SheetCommentsWriter = require('./sheet-comments-writer');\r\nconst DataValidations = require('../../doc/data-validations');\r\n\r\nconst xmlBuffer = new StringBuf();\r\n\r\n// ============================================================================================\r\n// Xforms\r\nconst ListXform = require('../../xlsx/xform/list-xform');\r\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\r\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\r\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\r\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\r\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\r\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\r\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\r\nconst SheetProtectionXform = require('../../xlsx/xform/sheet/sheet-protection-xform');\r\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\r\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\r\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\r\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\r\nconst ConditionalFormattingsXform = require('../../xlsx/xform/sheet/cf/conditional-formattings-xform');\r\nconst HeaderFooterXform = require('../../xlsx/xform/sheet/header-footer-xform');\r\nconst RowBreaksXform = require('../../xlsx/xform/sheet/row-breaks-xform');\r\n\r\n// since prepare and render are functional, we can use singletons\r\nconst xform = {\r\n  dataValidations: new DataValidationsXform(),\r\n  sheetProperties: new SheetPropertiesXform(),\r\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\r\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\r\n  row: new RowXform(),\r\n  hyperlinks: new ListXform({tag: 'hyperlinks', length: false, childXform: new HyperlinkXform()}),\r\n  sheetViews: new ListXform({tag: 'sheetViews', length: false, childXform: new SheetViewXform()}),\r\n  sheetProtection: new SheetProtectionXform(),\r\n  pageMargins: new PageMarginsXform(),\r\n  pageSeteup: new PageSetupXform(),\r\n  autoFilter: new AutoFilterXform(),\r\n  picture: new PictureXform(),\r\n  conditionalFormattings: new ConditionalFormattingsXform(),\r\n  headerFooter: new HeaderFooterXform(),\r\n  rowBreaks: new RowBreaksXform(),\r\n};\r\n\r\n// ============================================================================================\r\n\r\nclass WorksheetWriter {\r\n  constructor(options) {\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n\r\n    // and a name\r\n    this.name = options.name || `Sheet${this.id}`;\r\n\r\n    // add a state\r\n    this.state = options.state || 'visible';\r\n\r\n    // rows are stored here while they need to be worked on.\r\n    // when they are committed, they will be deleted.\r\n    this._rows = [];\r\n\r\n    // column definitions\r\n    this._columns = null;\r\n\r\n    // column keys (addRow convenience): key ==> this._columns index\r\n    this._keys = {};\r\n\r\n    // keep a record of all row and column pageBreaks\r\n    this._merges = [];\r\n    this._merges.add = function() {}; // ignore cell instruction\r\n\r\n    // keep record of all hyperlinks\r\n    this._sheetRelsWriter = new SheetRelsWriter(options);\r\n\r\n    this._sheetCommentsWriter = new SheetCommentsWriter(this, this._sheetRelsWriter, options);\r\n\r\n    // keep a record of dimensions\r\n    this._dimensions = new Dimensions();\r\n\r\n    // first uncommitted row\r\n    this._rowZero = 1;\r\n\r\n    // committed flag\r\n    this.committed = false;\r\n\r\n    // for data validations\r\n    this.dataValidations = new DataValidations();\r\n\r\n    // for sharing formulae\r\n    this._formulae = {};\r\n    this._siFormulae = 0;\r\n\r\n    // keep a record of conditionalFormattings\r\n    this.conditionalFormatting = [];\r\n\r\n    // keep a record of all row and column pageBreaks\r\n    this.rowBreaks = [];\r\n\r\n    // for default row height, outline levels, etc\r\n    this.properties = Object.assign(\r\n      {},\r\n      {\r\n        defaultRowHeight: 15,\r\n        dyDescent: 55,\r\n        outlineLevelCol: 0,\r\n        outlineLevelRow: 0,\r\n      },\r\n      options.properties\r\n    );\r\n\r\n    this.headerFooter = Object.assign(\r\n      {},\r\n      {\r\n        differentFirst: false,\r\n        differentOddEven: false,\r\n        oddHeader: null,\r\n        oddFooter: null,\r\n        evenHeader: null,\r\n        evenFooter: null,\r\n        firstHeader: null,\r\n        firstFooter: null,\r\n      },\r\n      options.headerFooter\r\n    );\r\n\r\n    // for all things printing\r\n    this.pageSetup = Object.assign(\r\n      {},\r\n      {\r\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\r\n        orientation: 'portrait',\r\n        horizontalDpi: 4294967295,\r\n        verticalDpi: 4294967295,\r\n        fitToPage: !!(\r\n          options.pageSetup &&\r\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\r\n          !options.pageSetup.scale\r\n        ),\r\n        pageOrder: 'downThenOver',\r\n        blackAndWhite: false,\r\n        draft: false,\r\n        cellComments: 'None',\r\n        errors: 'displayed',\r\n        scale: 100,\r\n        fitToWidth: 1,\r\n        fitToHeight: 1,\r\n        paperSize: undefined,\r\n        showRowColHeaders: false,\r\n        showGridLines: false,\r\n        horizontalCentered: false,\r\n        verticalCentered: false,\r\n        rowBreaks: null,\r\n        colBreaks: null,\r\n      },\r\n      options.pageSetup\r\n    );\r\n\r\n    // using shared strings creates a smaller xlsx file but may use more memory\r\n    this.useSharedStrings = options.useSharedStrings || false;\r\n\r\n    this._workbook = options.workbook;\r\n\r\n    this.hasComments = false;\r\n\r\n    // views\r\n    this._views = options.views || [];\r\n\r\n    // auto filter\r\n    this.autoFilter = options.autoFilter || null;\r\n\r\n    this._media = [];\r\n\r\n    // worksheet protection\r\n    this.sheetProtection = null;\r\n\r\n    // start writing to stream now\r\n    this._writeOpenWorksheet();\r\n\r\n    this.startedData = false;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._workbook;\r\n  }\r\n\r\n  get stream() {\r\n    if (!this._stream) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\r\n\r\n      // pause stream to prevent 'data' events\r\n      this._stream.pause();\r\n    }\r\n    return this._stream;\r\n  }\r\n\r\n  // destroy - not a valid operation for a streaming writer\r\n  // even though some streamers might be able to, it's a bad idea.\r\n  destroy() {\r\n    throw new Error('Invalid Operation: destroy');\r\n  }\r\n\r\n  commit() {\r\n    if (this.committed) {\r\n      return;\r\n    }\r\n    // commit all rows\r\n    this._rows.forEach(cRow => {\r\n      if (cRow) {\r\n        // write the row to the stream\r\n        this._writeRow(cRow);\r\n      }\r\n    });\r\n\r\n    // we _cannot_ accept new rows from now on\r\n    this._rows = null;\r\n\r\n    if (!this.startedData) {\r\n      this._writeOpenSheetData();\r\n    }\r\n    this._writeCloseSheetData();\r\n    this._writeAutoFilter();\r\n    this._writeMergeCells();\r\n\r\n    // for some reason, Excel can't handle dimensions at the bottom of the file\r\n    // this._writeDimensions();\r\n\r\n    this._writeHyperlinks();\r\n    this._writeConditionalFormatting();\r\n    this._writeDataValidations();\r\n    this._writeSheetProtection();\r\n    this._writePageMargins();\r\n    this._writePageSetup();\r\n    this._writeBackground();\r\n    this._writeHeaderFooter();\r\n    this._writeRowBreaks();\r\n\r\n    // Legacy Data tag for comments\r\n    this._writeLegacyData();\r\n\r\n    this._writeCloseWorksheet();\r\n    // signal end of stream to workbook\r\n    this.stream.end();\r\n\r\n    this._sheetCommentsWriter.commit();\r\n    // also commit the hyperlinks if any\r\n    this._sheetRelsWriter.commit();\r\n\r\n    this.committed = true;\r\n  }\r\n\r\n  // return the current dimensions of the writer\r\n  get dimensions() {\r\n    return this._dimensions;\r\n  }\r\n\r\n  get views() {\r\n    return this._views;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Columns\r\n\r\n  // get the current columns array.\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  // set the columns from an array of column definitions.\r\n  // Note: any headers defined will overwrite existing values.\r\n  set columns(value) {\r\n    // calculate max header row count\r\n    this._headerRowCount = value.reduce((pv, cv) => {\r\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\r\n      return Math.max(pv, headerCount);\r\n    }, 0);\r\n\r\n    // construct Column objects\r\n    let count = 1;\r\n    const columns = (this._columns = []);\r\n    value.forEach(defn => {\r\n      const column = new Column(this, count++, false);\r\n      columns.push(column);\r\n      column.defn = defn;\r\n    });\r\n  }\r\n\r\n  getColumnKey(key) {\r\n    return this._keys[key];\r\n  }\r\n\r\n  setColumnKey(key, value) {\r\n    this._keys[key] = value;\r\n  }\r\n\r\n  deleteColumnKey(key) {\r\n    delete this._keys[key];\r\n  }\r\n\r\n  eachColumnKey(f) {\r\n    _.each(this._keys, f);\r\n  }\r\n\r\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\r\n  // are created.\r\n  getColumn(c) {\r\n    if (typeof c === 'string') {\r\n      // if it matches a key'd column, return that\r\n      const col = this._keys[c];\r\n      if (col) return col;\r\n\r\n      // otherwise, assume letter\r\n      c = colCache.l2n(c);\r\n    }\r\n    if (!this._columns) {\r\n      this._columns = [];\r\n    }\r\n    if (c > this._columns.length) {\r\n      let n = this._columns.length + 1;\r\n      while (n <= c) {\r\n        this._columns.push(new Column(this, n++));\r\n      }\r\n    }\r\n    return this._columns[c - 1];\r\n  }\r\n\r\n  // =========================================================================\r\n  // Rows\r\n  get _nextRow() {\r\n    return this._rowZero + this._rows.length;\r\n  }\r\n\r\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\r\n  eachRow(options, iteratee) {\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = undefined;\r\n    }\r\n    if (options && options.includeEmpty) {\r\n      const n = this._nextRow;\r\n      for (let i = this._rowZero; i < n; i++) {\r\n        iteratee(this.getRow(i), i);\r\n      }\r\n    } else {\r\n      this._rows.forEach(row => {\r\n        if (row.hasValues) {\r\n          iteratee(row, row.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _commitRow(cRow) {\r\n    // since rows must be written in order, we commit all rows up till and including cRow\r\n    let found = false;\r\n    while (this._rows.length && !found) {\r\n      const row = this._rows.shift();\r\n      this._rowZero++;\r\n      if (row) {\r\n        this._writeRow(row);\r\n        found = row.number === cRow.number;\r\n        this._rowZero = row.number + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  get lastRow() {\r\n    // returns last uncommitted row\r\n    if (this._rows.length) {\r\n      return this._rows[this._rows.length - 1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // find a row (if exists) by row number\r\n  findRow(rowNumber) {\r\n    const index = rowNumber - this._rowZero;\r\n    return this._rows[index];\r\n  }\r\n\r\n  getRow(rowNumber) {\r\n    const index = rowNumber - this._rowZero;\r\n\r\n    // may fail if rows have been comitted\r\n    if (index < 0) {\r\n      throw new Error('Out of bounds: this row has been committed');\r\n    }\r\n    let row = this._rows[index];\r\n    if (!row) {\r\n      this._rows[index] = row = new Row(this, rowNumber);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  addRow(value) {\r\n    const row = new Row(this, this._nextRow);\r\n    this._rows[row.number - this._rowZero] = row;\r\n    row.values = value;\r\n    return row;\r\n  }\r\n\r\n  // ================================================================================\r\n  // Cells\r\n\r\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\r\n  findCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.findRow(address.row);\r\n    return row ? row.findCell(address.column) : undefined;\r\n  }\r\n\r\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\r\n  getCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.getRow(address.row);\r\n    return row.getCellEx(address);\r\n  }\r\n\r\n  mergeCells(...cells) {\r\n    // may fail if rows have been comitted\r\n    const dimensions = new Dimensions(cells);\r\n\r\n    // check cells aren't already merged\r\n    this._merges.forEach(merge => {\r\n      if (merge.intersects(dimensions)) {\r\n        throw new Error('Cannot merge already merged cells');\r\n      }\r\n    });\r\n\r\n    // apply merge\r\n    const master = this.getCell(dimensions.top, dimensions.left);\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        if (i > dimensions.top || j > dimensions.left) {\r\n          this.getCell(i, j).merge(master);\r\n        }\r\n      }\r\n    }\r\n\r\n    // index merge\r\n    this._merges.push(dimensions);\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Conditional Formatting\r\n  addConditionalFormatting(cf) {\r\n    this.conditionalFormatting.push(cf);\r\n  }\r\n\r\n  removeConditionalFormatting(filter) {\r\n    if (typeof filter === 'number') {\r\n      this.conditionalFormatting.splice(filter, 1);\r\n    } else if (filter instanceof Function) {\r\n      this.conditionalFormatting = this.conditionalFormatting.filter(filter);\r\n    } else {\r\n      this.conditionalFormatting = [];\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n\r\n  addBackgroundImage(imageId) {\r\n    this._background = {\r\n      imageId,\r\n    };\r\n  }\r\n\r\n  getBackgroundImageId() {\r\n    return this._background && this._background.imageId;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Worksheet Protection\r\n  protect(password, options) {\r\n    // TODO: make this function truly async\r\n    // perhaps marshal to worker thread or something\r\n    return new Promise(resolve => {\r\n      this.sheetProtection = {\r\n        sheet: true,\r\n      };\r\n      if (options && 'spinCount' in options) {\r\n        // force spinCount to be integer >= 0\r\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\r\n      }\r\n      if (password) {\r\n        this.sheetProtection.algorithmName = 'SHA-512';\r\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\r\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\r\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\r\n          password,\r\n          'SHA512',\r\n          this.sheetProtection.saltValue,\r\n          this.sheetProtection.spinCount\r\n        );\r\n      }\r\n      if (options) {\r\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\r\n        if (!password && 'spinCount' in options) {\r\n          delete this.sheetProtection.spinCount;\r\n        }\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  unprotect() {\r\n    this.sheetProtection = null;\r\n  }\r\n\r\n  // ================================================================================\r\n\r\n  _write(text) {\r\n    xmlBuffer.reset();\r\n    xmlBuffer.addText(text);\r\n    this.stream.write(xmlBuffer);\r\n  }\r\n\r\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\r\n    const sheetPropertiesModel = {\r\n      outlineProperties: properties && properties.outlineProperties,\r\n      tabColor: properties && properties.tabColor,\r\n      pageSetup:\r\n        pageSetup && pageSetup.fitToPage\r\n          ? {\r\n              fitToPage: pageSetup.fitToPage,\r\n            }\r\n          : undefined,\r\n    };\r\n\r\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\r\n  }\r\n\r\n  _writeSheetFormatProperties(xmlBuf, properties) {\r\n    const sheetFormatPropertiesModel = properties\r\n      ? {\r\n          defaultRowHeight: properties.defaultRowHeight,\r\n          dyDescent: properties.dyDescent,\r\n          outlineLevelCol: properties.outlineLevelCol,\r\n          outlineLevelRow: properties.outlineLevelRow,\r\n        }\r\n      : undefined;\r\n    if (properties.defaultColWidth) {\r\n      sheetFormatPropertiesModel.defaultColWidth = properties.defaultColWidth;\r\n    }\r\n\r\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\r\n  }\r\n\r\n  _writeOpenWorksheet() {\r\n    xmlBuffer.reset();\r\n\r\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\r\n    xmlBuffer.addText(\r\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\r\n        ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\r\n        ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\r\n        ' mc:Ignorable=\"x14ac\"' +\r\n        ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\r\n    );\r\n\r\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\r\n\r\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\r\n\r\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\r\n\r\n    this.stream.write(xmlBuffer);\r\n  }\r\n\r\n  _writeColumns() {\r\n    const cols = Column.toModel(this.columns);\r\n    if (cols) {\r\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\r\n      this.stream.write(xform.columns.toXml(cols));\r\n    }\r\n  }\r\n\r\n  _writeOpenSheetData() {\r\n    this._write('<sheetData>');\r\n  }\r\n\r\n  _writeRow(row) {\r\n    if (!this.startedData) {\r\n      this._writeColumns();\r\n      this._writeOpenSheetData();\r\n      this.startedData = true;\r\n    }\r\n\r\n    if (row.hasValues || row.height) {\r\n      const {model} = row;\r\n      const options = {\r\n        styles: this._workbook.styles,\r\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\r\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\r\n        merges: this._merges,\r\n        formulae: this._formulae,\r\n        siFormulae: this._siFormulae,\r\n        comments: [],\r\n      };\r\n      xform.row.prepare(model, options);\r\n      this.stream.write(xform.row.toXml(model));\r\n\r\n      if (options.comments.length) {\r\n        this.hasComments = true;\r\n        this._sheetCommentsWriter.addComments(options.comments);\r\n      }\r\n    }\r\n  }\r\n\r\n  _writeCloseSheetData() {\r\n    this._write('</sheetData>');\r\n  }\r\n\r\n  _writeMergeCells() {\r\n    if (this._merges.length) {\r\n      xmlBuffer.reset();\r\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\r\n      this._merges.forEach(merge => {\r\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\r\n      });\r\n      xmlBuffer.addText('</mergeCells>');\r\n\r\n      this.stream.write(xmlBuffer);\r\n    }\r\n  }\r\n\r\n  _writeHyperlinks() {\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\r\n  }\r\n\r\n  _writeConditionalFormatting() {\r\n    const options = {\r\n      styles: this._workbook.styles,\r\n    };\r\n    xform.conditionalFormattings.prepare(this.conditionalFormatting, options);\r\n    this.stream.write(xform.conditionalFormattings.toXml(this.conditionalFormatting));\r\n  }\r\n\r\n  _writeRowBreaks() {\r\n    this.stream.write(xform.rowBreaks.toXml(this.rowBreaks));\r\n  }\r\n\r\n  _writeDataValidations() {\r\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\r\n  }\r\n\r\n  _writeSheetProtection() {\r\n    this.stream.write(xform.sheetProtection.toXml(this.sheetProtection));\r\n  }\r\n\r\n  _writePageMargins() {\r\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\r\n  }\r\n\r\n  _writePageSetup() {\r\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\r\n  }\r\n\r\n  _writeHeaderFooter() {\r\n    this.stream.write(xform.headerFooter.toXml(this.headerFooter));\r\n  }\r\n\r\n  _writeAutoFilter() {\r\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\r\n  }\r\n\r\n  _writeBackground() {\r\n    if (this._background) {\r\n      if (this._background.imageId !== undefined) {\r\n        const image = this._workbook.getImage(this._background.imageId);\r\n        const pictureId = this._sheetRelsWriter.addMedia({\r\n          Target: `../media/${image.name}`,\r\n          Type: RelType.Image,\r\n        });\r\n\r\n        this._background = {\r\n          ...this._background,\r\n          rId: pictureId,\r\n        };\r\n      }\r\n      this.stream.write(xform.picture.toXml({rId: this._background.rId}));\r\n    }\r\n  }\r\n\r\n  _writeLegacyData() {\r\n    if (this.hasComments) {\r\n      xmlBuffer.reset();\r\n      xmlBuffer.addText(`<legacyDrawing r:id=\"${this._sheetCommentsWriter.vmlRelId}\"/>`);\r\n      this.stream.write(xmlBuffer);\r\n    }\r\n  }\r\n\r\n  _writeDimensions() {\r\n    // for some reason, Excel can't handle dimensions at the bottom of the file\r\n    // and we don't know the dimensions until the commit, so don't write them.\r\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\r\n  }\r\n\r\n  _writeCloseWorksheet() {\r\n    this._write('</worksheet>');\r\n  }\r\n}\r\n\r\nmodule.exports = WorksheetWriter;\r\n"],"mappings":";;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAE3C,IAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE9C,IAAME,QAAQ,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AACjD,IAAMG,SAAS,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAClD,IAAMI,UAAU,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAC7C,IAAMK,SAAS,GAAGL,OAAO,CAAC,wBAAwB,CAAC;AAEnD,IAAMM,GAAG,GAAGN,OAAO,CAAC,eAAe,CAAC;AACpC,IAAMO,MAAM,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAE1C,IAAMQ,eAAe,GAAGR,OAAO,CAAC,qBAAqB,CAAC;AACtD,IAAMS,mBAAmB,GAAGT,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAMU,eAAe,GAAGV,OAAO,CAAC,4BAA4B,CAAC;AAE7D,IAAMW,SAAS,GAAG,IAAIN,SAAS,CAAC,CAAC;;AAEjC;AACA;AACA,IAAMO,SAAS,GAAGZ,OAAO,CAAC,6BAA6B,CAAC;AACxD,IAAMa,oBAAoB,GAAGb,OAAO,CAAC,+CAA+C,CAAC;AACrF,IAAMc,oBAAoB,GAAGd,OAAO,CAAC,+CAA+C,CAAC;AACrF,IAAMe,0BAA0B,GAAGf,OAAO,CAAC,sDAAsD,CAAC;AAClG,IAAMgB,QAAQ,GAAGhB,OAAO,CAAC,kCAAkC,CAAC;AAC5D,IAAMiB,QAAQ,GAAGjB,OAAO,CAAC,kCAAkC,CAAC;AAC5D,IAAMkB,cAAc,GAAGlB,OAAO,CAAC,wCAAwC,CAAC;AACxE,IAAMmB,cAAc,GAAGnB,OAAO,CAAC,yCAAyC,CAAC;AACzE,IAAMoB,oBAAoB,GAAGpB,OAAO,CAAC,+CAA+C,CAAC;AACrF,IAAMqB,gBAAgB,GAAGrB,OAAO,CAAC,2CAA2C,CAAC;AAC7E,IAAMsB,cAAc,GAAGtB,OAAO,CAAC,yCAAyC,CAAC;AACzE,IAAMuB,eAAe,GAAGvB,OAAO,CAAC,0CAA0C,CAAC;AAC3E,IAAMwB,YAAY,GAAGxB,OAAO,CAAC,sCAAsC,CAAC;AACpE,IAAMyB,2BAA2B,GAAGzB,OAAO,CAAC,yDAAyD,CAAC;AACtG,IAAM0B,iBAAiB,GAAG1B,OAAO,CAAC,4CAA4C,CAAC;AAC/E,IAAM2B,cAAc,GAAG3B,OAAO,CAAC,yCAAyC,CAAC;;AAEzE;AACA,IAAM4B,KAAK,GAAG;EACZC,eAAe,EAAE,IAAIhB,oBAAoB,CAAC,CAAC;EAC3CiB,eAAe,EAAE,IAAIhB,oBAAoB,CAAC,CAAC;EAC3CiB,qBAAqB,EAAE,IAAIhB,0BAA0B,CAAC,CAAC;EACvDiB,OAAO,EAAE,IAAIpB,SAAS,CAAC;IAACqB,GAAG,EAAE,MAAM;IAAEC,MAAM,EAAE,KAAK;IAAEC,UAAU,EAAE,IAAInB,QAAQ,CAAC;EAAC,CAAC,CAAC;EAChFoB,GAAG,EAAE,IAAInB,QAAQ,CAAC,CAAC;EACnBoB,UAAU,EAAE,IAAIzB,SAAS,CAAC;IAACqB,GAAG,EAAE,YAAY;IAAEC,MAAM,EAAE,KAAK;IAAEC,UAAU,EAAE,IAAIjB,cAAc,CAAC;EAAC,CAAC,CAAC;EAC/FoB,UAAU,EAAE,IAAI1B,SAAS,CAAC;IAACqB,GAAG,EAAE,YAAY;IAAEC,MAAM,EAAE,KAAK;IAAEC,UAAU,EAAE,IAAIhB,cAAc,CAAC;EAAC,CAAC,CAAC;EAC/FoB,eAAe,EAAE,IAAInB,oBAAoB,CAAC,CAAC;EAC3CoB,WAAW,EAAE,IAAInB,gBAAgB,CAAC,CAAC;EACnCoB,UAAU,EAAE,IAAInB,cAAc,CAAC,CAAC;EAChCoB,UAAU,EAAE,IAAInB,eAAe,CAAC,CAAC;EACjCoB,OAAO,EAAE,IAAInB,YAAY,CAAC,CAAC;EAC3BoB,sBAAsB,EAAE,IAAInB,2BAA2B,CAAC,CAAC;EACzDoB,YAAY,EAAE,IAAInB,iBAAiB,CAAC,CAAC;EACrCoB,SAAS,EAAE,IAAInB,cAAc,CAAC;AAChC,CAAC;;AAED;AAAA,IAEMoB,eAAe;EACnB,SAAAA,gBAAYC,OAAO,EAAE;IAAAC,eAAA,OAAAF,eAAA;IACnB;IACA,IAAI,CAACG,EAAE,GAAGF,OAAO,CAACE,EAAE;;IAEpB;IACA,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACG,IAAI,YAAAC,MAAA,CAAY,IAAI,CAACF,EAAE,CAAE;;IAE7C;IACA,IAAI,CAACG,KAAK,GAAGL,OAAO,CAACK,KAAK,IAAI,SAAS;;IAEvC;IACA;IACA,IAAI,CAACC,KAAK,GAAG,EAAE;;IAEf;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI;;IAEpB;IACA,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;;IAEf;IACA,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACA,OAAO,CAACC,GAAG,GAAG,YAAW,CAAC,CAAC,CAAC,CAAC;;IAElC;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAInD,eAAe,CAACwC,OAAO,CAAC;IAEpD,IAAI,CAACY,oBAAoB,GAAG,IAAInD,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAACkD,gBAAgB,EAAEX,OAAO,CAAC;;IAEzF;IACA,IAAI,CAACa,WAAW,GAAG,IAAIzD,UAAU,CAAC,CAAC;;IAEnC;IACA,IAAI,CAAC0D,QAAQ,GAAG,CAAC;;IAEjB;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;;IAEtB;IACA,IAAI,CAAClC,eAAe,GAAG,IAAInB,eAAe,CAAC,CAAC;;IAE5C;IACA,IAAI,CAACsD,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,WAAW,GAAG,CAAC;;IAEpB;IACA,IAAI,CAACC,qBAAqB,GAAG,EAAE;;IAE/B;IACA,IAAI,CAACpB,SAAS,GAAG,EAAE;;IAEnB;IACA,IAAI,CAACqB,UAAU,GAAGC,MAAM,CAACC,MAAM,CAC7B,CAAC,CAAC,EACF;MACEC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE,EAAE;MACbC,eAAe,EAAE,CAAC;MAClBC,eAAe,EAAE;IACnB,CAAC,EACDzB,OAAO,CAACmB,UACV,CAAC;IAED,IAAI,CAACtB,YAAY,GAAGuB,MAAM,CAACC,MAAM,CAC/B,CAAC,CAAC,EACF;MACEK,cAAc,EAAE,KAAK;MACrBC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE;IACf,CAAC,EACDjC,OAAO,CAACH,YACV,CAAC;;IAED;IACA,IAAI,CAACqC,SAAS,GAAGd,MAAM,CAACC,MAAM,CAC5B,CAAC,CAAC,EACF;MACEc,OAAO,EAAE;QAACC,IAAI,EAAE,GAAG;QAAEC,KAAK,EAAE,GAAG;QAAEC,GAAG,EAAE,IAAI;QAAEC,MAAM,EAAE,IAAI;QAAEC,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAG,CAAC;MACnFC,WAAW,EAAE,UAAU;MACvBC,aAAa,EAAE,UAAU;MACzBC,WAAW,EAAE,UAAU;MACvBC,SAAS,EAAE,CAAC,EACV7C,OAAO,CAACkC,SAAS,KAChBlC,OAAO,CAACkC,SAAS,CAACY,UAAU,IAAI9C,OAAO,CAACkC,SAAS,CAACa,WAAW,CAAC,IAC/D,CAAC/C,OAAO,CAACkC,SAAS,CAACc,KAAK,CACzB;MACDC,SAAS,EAAE,cAAc;MACzBC,aAAa,EAAE,KAAK;MACpBC,KAAK,EAAE,KAAK;MACZC,YAAY,EAAE,MAAM;MACpBC,MAAM,EAAE,WAAW;MACnBL,KAAK,EAAE,GAAG;MACVF,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdO,SAAS,EAAEC,SAAS;MACpBC,iBAAiB,EAAE,KAAK;MACxBC,aAAa,EAAE,KAAK;MACpBC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,KAAK;MACvB7D,SAAS,EAAE,IAAI;MACf8D,SAAS,EAAE;IACb,CAAC,EACD5D,OAAO,CAACkC,SACV,CAAC;;IAED;IACA,IAAI,CAAC2B,gBAAgB,GAAG7D,OAAO,CAAC6D,gBAAgB,IAAI,KAAK;IAEzD,IAAI,CAACC,SAAS,GAAG9D,OAAO,CAAC+D,QAAQ;IAEjC,IAAI,CAACC,WAAW,GAAG,KAAK;;IAExB;IACA,IAAI,CAACC,MAAM,GAAGjE,OAAO,CAACkE,KAAK,IAAI,EAAE;;IAEjC;IACA,IAAI,CAACxE,UAAU,GAAGM,OAAO,CAACN,UAAU,IAAI,IAAI;IAE5C,IAAI,CAACyE,MAAM,GAAG,EAAE;;IAEhB;IACA,IAAI,CAAC5E,eAAe,GAAG,IAAI;;IAE3B;IACA,IAAI,CAAC6E,mBAAmB,CAAC,CAAC;IAE1B,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAACC,YAAA,CAAAvE,eAAA;IAAAwE,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACV,SAAS;IACvB;EAAC;IAAAS,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;QACjB;QACA,IAAI,CAACA,OAAO,GAAG,IAAI,CAACX,SAAS,CAACY,WAAW,wBAAAtE,MAAA,CAAwB,IAAI,CAACF,EAAE,SAAM,CAAC;;QAE/E;QACA,IAAI,CAACuE,OAAO,CAACE,KAAK,CAAC,CAAC;MACtB;MACA,OAAO,IAAI,CAACF,OAAO;IACrB;;IAEA;IACA;EAAA;IAAAF,GAAA;IAAAK,KAAA,EACA,SAAAC,QAAA,EAAU;MACR,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EAAC;IAAAP,GAAA;IAAAK,KAAA,EAED,SAAAG,OAAA,EAAS;MAAA,IAAAC,KAAA;MACP,IAAI,IAAI,CAACjE,SAAS,EAAE;QAClB;MACF;MACA;MACA,IAAI,CAACT,KAAK,CAAC2E,OAAO,CAAC,UAAAC,IAAI,EAAI;QACzB,IAAIA,IAAI,EAAE;UACR;UACAF,KAAI,CAACG,SAAS,CAACD,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;;MAEF;MACA,IAAI,CAAC5E,KAAK,GAAG,IAAI;MAEjB,IAAI,CAAC,IAAI,CAAC+D,WAAW,EAAE;QACrB,IAAI,CAACe,mBAAmB,CAAC,CAAC;MAC5B;MACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACC,gBAAgB,CAAC,CAAC;;MAEvB;MACA;;MAEA,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACC,2BAA2B,CAAC,CAAC;MAClC,IAAI,CAACC,qBAAqB,CAAC,CAAC;MAC5B,IAAI,CAACC,qBAAqB,CAAC,CAAC;MAC5B,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACC,kBAAkB,CAAC,CAAC;MACzB,IAAI,CAACC,eAAe,CAAC,CAAC;;MAEtB;MACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAEvB,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3B;MACA,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;MAEjB,IAAI,CAACxF,oBAAoB,CAACmE,MAAM,CAAC,CAAC;MAClC;MACA,IAAI,CAACpE,gBAAgB,CAACoE,MAAM,CAAC,CAAC;MAE9B,IAAI,CAAChE,SAAS,GAAG,IAAI;IACvB;;IAEA;EAAA;IAAAwD,GAAA;IAAAC,GAAA,EACA,SAAAA,IAAA,EAAiB;MACf,OAAO,IAAI,CAAC3D,WAAW;IACzB;EAAC;IAAA0D,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAY;MACV,OAAO,IAAI,CAACP,MAAM;IACpB;;IAEA;IACA;;IAEA;EAAA;IAAAM,GAAA;IAAAC,GAAA,EACA,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACjE,QAAQ;IACtB;;IAEA;IACA;IAAA;IAAA8F,GAAA,EACA,SAAAA,IAAYzB,KAAK,EAAE;MAAA,IAAA0B,MAAA;MACjB;MACA,IAAI,CAACC,eAAe,GAAG3B,KAAK,CAAC4B,MAAM,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAK;QAC9C,IAAMC,WAAW,GAAID,EAAE,CAAClE,MAAM,IAAI,CAAC,IAAMkE,EAAE,CAACE,OAAO,IAAIF,EAAE,CAACE,OAAO,CAAC1H,MAAO,IAAI,CAAC;QAC9E,OAAO2H,IAAI,CAACC,GAAG,CAACL,EAAE,EAAEE,WAAW,CAAC;MAClC,CAAC,EAAE,CAAC,CAAC;;MAEL;MACA,IAAII,KAAK,GAAG,CAAC;MACb,IAAM/H,OAAO,GAAI,IAAI,CAACuB,QAAQ,GAAG,EAAG;MACpCqE,KAAK,CAACK,OAAO,CAAC,UAAA+B,IAAI,EAAI;QACpB,IAAMC,MAAM,GAAG,IAAI1J,MAAM,CAAC+I,MAAI,EAAES,KAAK,EAAE,EAAE,KAAK,CAAC;QAC/C/H,OAAO,CAACkI,IAAI,CAACD,MAAM,CAAC;QACpBA,MAAM,CAACD,IAAI,GAAGA,IAAI;MACpB,CAAC,CAAC;IACJ;EAAC;IAAAzC,GAAA;IAAAK,KAAA,EAED,SAAAuC,aAAa5C,GAAG,EAAE;MAChB,OAAO,IAAI,CAAC/D,KAAK,CAAC+D,GAAG,CAAC;IACxB;EAAC;IAAAA,GAAA;IAAAK,KAAA,EAED,SAAAwC,aAAa7C,GAAG,EAAEK,KAAK,EAAE;MACvB,IAAI,CAACpE,KAAK,CAAC+D,GAAG,CAAC,GAAGK,KAAK;IACzB;EAAC;IAAAL,GAAA;IAAAK,KAAA,EAED,SAAAyC,gBAAgB9C,GAAG,EAAE;MACnB,OAAO,IAAI,CAAC/D,KAAK,CAAC+D,GAAG,CAAC;IACxB;EAAC;IAAAA,GAAA;IAAAK,KAAA,EAED,SAAA0C,cAAcC,CAAC,EAAE;MACfxK,CAAC,CAACyK,IAAI,CAAC,IAAI,CAAChH,KAAK,EAAE+G,CAAC,CAAC;IACvB;;IAEA;IACA;EAAA;IAAAhD,GAAA;IAAAK,KAAA,EACA,SAAA6C,UAAUC,CAAC,EAAE;MACX,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;QACzB;QACA,IAAMC,GAAG,GAAG,IAAI,CAACnH,KAAK,CAACkH,CAAC,CAAC;QACzB,IAAIC,GAAG,EAAE,OAAOA,GAAG;;QAEnB;QACAD,CAAC,GAAGxK,QAAQ,CAAC0K,GAAG,CAACF,CAAC,CAAC;MACrB;MACA,IAAI,CAAC,IAAI,CAACnH,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,EAAE;MACpB;MACA,IAAImH,CAAC,GAAG,IAAI,CAACnH,QAAQ,CAACrB,MAAM,EAAE;QAC5B,IAAI2I,CAAC,GAAG,IAAI,CAACtH,QAAQ,CAACrB,MAAM,GAAG,CAAC;QAChC,OAAO2I,CAAC,IAAIH,CAAC,EAAE;UACb,IAAI,CAACnH,QAAQ,CAAC2G,IAAI,CAAC,IAAI3J,MAAM,CAAC,IAAI,EAAEsK,CAAC,EAAE,CAAC,CAAC;QAC3C;MACF;MACA,OAAO,IAAI,CAACtH,QAAQ,CAACmH,CAAC,GAAG,CAAC,CAAC;IAC7B;;IAEA;IACA;EAAA;IAAAnD,GAAA;IAAAC,GAAA,EACA,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAAC1D,QAAQ,GAAG,IAAI,CAACR,KAAK,CAACpB,MAAM;IAC1C;;IAEA;EAAA;IAAAqF,GAAA;IAAAK,KAAA,EACA,SAAAkD,QAAQ9H,OAAO,EAAE+H,QAAQ,EAAE;MACzB,IAAI,CAACA,QAAQ,EAAE;QACbA,QAAQ,GAAG/H,OAAO;QAClBA,OAAO,GAAGuD,SAAS;MACrB;MACA,IAAIvD,OAAO,IAAIA,OAAO,CAACgI,YAAY,EAAE;QACnC,IAAMH,CAAC,GAAG,IAAI,CAACI,QAAQ;QACvB,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACpH,QAAQ,EAAEoH,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAE,EAAE;UACtCH,QAAQ,CAAC,IAAI,CAACI,MAAM,CAACD,CAAC,CAAC,EAAEA,CAAC,CAAC;QAC7B;MACF,CAAC,MAAM;QACL,IAAI,CAAC5H,KAAK,CAAC2E,OAAO,CAAC,UAAA7F,GAAG,EAAI;UACxB,IAAIA,GAAG,CAACgJ,SAAS,EAAE;YACjBL,QAAQ,CAAC3I,GAAG,EAAEA,GAAG,CAACiJ,MAAM,CAAC;UAC3B;QACF,CAAC,CAAC;MACJ;IACF;EAAC;IAAA9D,GAAA;IAAAK,KAAA,EAED,SAAA0D,WAAWpD,IAAI,EAAE;MACf;MACA,IAAIqD,KAAK,GAAG,KAAK;MACjB,OAAO,IAAI,CAACjI,KAAK,CAACpB,MAAM,IAAI,CAACqJ,KAAK,EAAE;QAClC,IAAMnJ,GAAG,GAAG,IAAI,CAACkB,KAAK,CAACkI,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC1H,QAAQ,EAAE;QACf,IAAI1B,GAAG,EAAE;UACP,IAAI,CAAC+F,SAAS,CAAC/F,GAAG,CAAC;UACnBmJ,KAAK,GAAGnJ,GAAG,CAACiJ,MAAM,KAAKnD,IAAI,CAACmD,MAAM;UAClC,IAAI,CAACvH,QAAQ,GAAG1B,GAAG,CAACiJ,MAAM,GAAG,CAAC;QAChC;MACF;IACF;EAAC;IAAA9D,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAc;MACZ;MACA,IAAI,IAAI,CAAClE,KAAK,CAACpB,MAAM,EAAE;QACrB,OAAO,IAAI,CAACoB,KAAK,CAAC,IAAI,CAACA,KAAK,CAACpB,MAAM,GAAG,CAAC,CAAC;MAC1C;MACA,OAAOqE,SAAS;IAClB;;IAEA;EAAA;IAAAgB,GAAA;IAAAK,KAAA,EACA,SAAA6D,QAAQC,SAAS,EAAE;MACjB,IAAMC,KAAK,GAAGD,SAAS,GAAG,IAAI,CAAC5H,QAAQ;MACvC,OAAO,IAAI,CAACR,KAAK,CAACqI,KAAK,CAAC;IAC1B;EAAC;IAAApE,GAAA;IAAAK,KAAA,EAED,SAAAuD,OAAOO,SAAS,EAAE;MAChB,IAAMC,KAAK,GAAGD,SAAS,GAAG,IAAI,CAAC5H,QAAQ;;MAEvC;MACA,IAAI6H,KAAK,GAAG,CAAC,EAAE;QACb,MAAM,IAAI7D,KAAK,CAAC,4CAA4C,CAAC;MAC/D;MACA,IAAI1F,GAAG,GAAG,IAAI,CAACkB,KAAK,CAACqI,KAAK,CAAC;MAC3B,IAAI,CAACvJ,GAAG,EAAE;QACR,IAAI,CAACkB,KAAK,CAACqI,KAAK,CAAC,GAAGvJ,GAAG,GAAG,IAAI9B,GAAG,CAAC,IAAI,EAAEoL,SAAS,CAAC;MACpD;MACA,OAAOtJ,GAAG;IACZ;EAAC;IAAAmF,GAAA;IAAAK,KAAA,EAED,SAAAgE,OAAOhE,KAAK,EAAE;MACZ,IAAMxF,GAAG,GAAG,IAAI9B,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC2K,QAAQ,CAAC;MACxC,IAAI,CAAC3H,KAAK,CAAClB,GAAG,CAACiJ,MAAM,GAAG,IAAI,CAACvH,QAAQ,CAAC,GAAG1B,GAAG;MAC5CA,GAAG,CAACyJ,MAAM,GAAGjE,KAAK;MAClB,OAAOxF,GAAG;IACZ;;IAEA;IACA;;IAEA;EAAA;IAAAmF,GAAA;IAAAK,KAAA,EACA,SAAAkE,SAASC,CAAC,EAAErB,CAAC,EAAE;MACb,IAAMsB,OAAO,GAAG9L,QAAQ,CAAC+L,UAAU,CAACF,CAAC,EAAErB,CAAC,CAAC;MACzC,IAAMtI,GAAG,GAAG,IAAI,CAACqJ,OAAO,CAACO,OAAO,CAAC5J,GAAG,CAAC;MACrC,OAAOA,GAAG,GAAGA,GAAG,CAAC0J,QAAQ,CAACE,OAAO,CAAC/B,MAAM,CAAC,GAAG1D,SAAS;IACvD;;IAEA;EAAA;IAAAgB,GAAA;IAAAK,KAAA,EACA,SAAAsE,QAAQH,CAAC,EAAErB,CAAC,EAAE;MACZ,IAAMsB,OAAO,GAAG9L,QAAQ,CAAC+L,UAAU,CAACF,CAAC,EAAErB,CAAC,CAAC;MACzC,IAAMtI,GAAG,GAAG,IAAI,CAAC+I,MAAM,CAACa,OAAO,CAAC5J,GAAG,CAAC;MACpC,OAAOA,GAAG,CAAC+J,SAAS,CAACH,OAAO,CAAC;IAC/B;EAAC;IAAAzE,GAAA;IAAAK,KAAA,EAED,SAAAwE,WAAA,EAAqB;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAApK,MAAA,EAAPqK,KAAK,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAALF,KAAK,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;MAAA;MACjB;MACA,IAAMC,UAAU,GAAG,IAAItM,UAAU,CAACmM,KAAK,CAAC;;MAExC;MACA,IAAI,CAAC9I,OAAO,CAACwE,OAAO,CAAC,UAAA0E,KAAK,EAAI;QAC5B,IAAIA,KAAK,CAACC,UAAU,CAACF,UAAU,CAAC,EAAE;UAChC,MAAM,IAAI5E,KAAK,CAAC,mCAAmC,CAAC;QACtD;MACF,CAAC,CAAC;;MAEF;MACA,IAAM+E,MAAM,GAAG,IAAI,CAACX,OAAO,CAACQ,UAAU,CAACpH,GAAG,EAAEoH,UAAU,CAACtH,IAAI,CAAC;MAC5D,KAAK,IAAI8F,CAAC,GAAGwB,UAAU,CAACpH,GAAG,EAAE4F,CAAC,IAAIwB,UAAU,CAACnH,MAAM,EAAE2F,CAAC,EAAE,EAAE;QACxD,KAAK,IAAI4B,CAAC,GAAGJ,UAAU,CAACtH,IAAI,EAAE0H,CAAC,IAAIJ,UAAU,CAACrH,KAAK,EAAEyH,CAAC,EAAE,EAAE;UACxD,IAAI5B,CAAC,GAAGwB,UAAU,CAACpH,GAAG,IAAIwH,CAAC,GAAGJ,UAAU,CAACtH,IAAI,EAAE;YAC7C,IAAI,CAAC8G,OAAO,CAAChB,CAAC,EAAE4B,CAAC,CAAC,CAACH,KAAK,CAACE,MAAM,CAAC;UAClC;QACF;MACF;;MAEA;MACA,IAAI,CAACpJ,OAAO,CAACyG,IAAI,CAACwC,UAAU,CAAC;IAC/B;;IAEA;IACA;EAAA;IAAAnF,GAAA;IAAAK,KAAA,EACA,SAAAmF,yBAAyBC,EAAE,EAAE;MAC3B,IAAI,CAAC9I,qBAAqB,CAACgG,IAAI,CAAC8C,EAAE,CAAC;IACrC;EAAC;IAAAzF,GAAA;IAAAK,KAAA,EAED,SAAAqF,4BAA4BC,MAAM,EAAE;MAClC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC9B,IAAI,CAAChJ,qBAAqB,CAACiJ,MAAM,CAACD,MAAM,EAAE,CAAC,CAAC;MAC9C,CAAC,MAAM,IAAIA,MAAM,YAAYE,QAAQ,EAAE;QACrC,IAAI,CAAClJ,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACgJ,MAAM,CAACA,MAAM,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,CAAChJ,qBAAqB,GAAG,EAAE;MACjC;IACF;;IAEA;EAAA;IAAAqD,GAAA;IAAAK,KAAA,EAEA,SAAAyF,mBAAmBC,OAAO,EAAE;MAC1B,IAAI,CAACC,WAAW,GAAG;QACjBD,OAAO,EAAPA;MACF,CAAC;IACH;EAAC;IAAA/F,GAAA;IAAAK,KAAA,EAED,SAAA4F,qBAAA,EAAuB;MACrB,OAAO,IAAI,CAACD,WAAW,IAAI,IAAI,CAACA,WAAW,CAACD,OAAO;IACrD;;IAEA;IACA;EAAA;IAAA/F,GAAA;IAAAK,KAAA,EACA,SAAA6F,QAAQC,QAAQ,EAAE1K,OAAO,EAAE;MAAA,IAAA2K,MAAA;MACzB;MACA;MACA,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO,EAAI;QAC5BF,MAAI,CAACpL,eAAe,GAAG;UACrBuL,KAAK,EAAE;QACT,CAAC;QACD,IAAI9K,OAAO,IAAI,WAAW,IAAIA,OAAO,EAAE;UACrC;UACAA,OAAO,CAAC+K,SAAS,GAAGC,MAAM,CAACC,QAAQ,CAACjL,OAAO,CAAC+K,SAAS,CAAC,GAAGlE,IAAI,CAACqE,KAAK,CAACrE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE9G,OAAO,CAAC+K,SAAS,CAAC,CAAC,GAAG,MAAM;QAC9G;QACA,IAAIL,QAAQ,EAAE;UACZC,MAAI,CAACpL,eAAe,CAAC4L,aAAa,GAAG,SAAS;UAC9CR,MAAI,CAACpL,eAAe,CAAC6L,SAAS,GAAGjO,SAAS,CAACkO,WAAW,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;UAC7EX,MAAI,CAACpL,eAAe,CAACwL,SAAS,GAAG/K,OAAO,IAAI,WAAW,IAAIA,OAAO,GAAGA,OAAO,CAAC+K,SAAS,GAAG,MAAM,CAAC,CAAC;UACjGJ,MAAI,CAACpL,eAAe,CAACgM,SAAS,GAAGpO,SAAS,CAACqO,qBAAqB,CAC9Dd,QAAQ,EACR,QAAQ,EACRC,MAAI,CAACpL,eAAe,CAAC6L,SAAS,EAC9BT,MAAI,CAACpL,eAAe,CAACwL,SACvB,CAAC;QACH;QACA,IAAI/K,OAAO,EAAE;UACX2K,MAAI,CAACpL,eAAe,GAAG6B,MAAM,CAACC,MAAM,CAACsJ,MAAI,CAACpL,eAAe,EAAES,OAAO,CAAC;UACnE,IAAI,CAAC0K,QAAQ,IAAI,WAAW,IAAI1K,OAAO,EAAE;YACvC,OAAO2K,MAAI,CAACpL,eAAe,CAACwL,SAAS;UACvC;QACF;QACAF,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;EAAC;IAAAtG,GAAA;IAAAK,KAAA,EAED,SAAA6G,UAAA,EAAY;MACV,IAAI,CAAClM,eAAe,GAAG,IAAI;IAC7B;;IAEA;EAAA;IAAAgF,GAAA;IAAAK,KAAA,EAEA,SAAA8G,OAAOC,IAAI,EAAE;MACXhO,SAAS,CAACiO,KAAK,CAAC,CAAC;MACjBjO,SAAS,CAACkO,OAAO,CAACF,IAAI,CAAC;MACvB,IAAI,CAACxF,MAAM,CAAC2F,KAAK,CAACnO,SAAS,CAAC;IAC9B;EAAC;IAAA4G,GAAA;IAAAK,KAAA,EAED,SAAAmH,sBAAsBC,MAAM,EAAE7K,UAAU,EAAEe,SAAS,EAAE;MACnD,IAAM+J,oBAAoB,GAAG;QAC3BC,iBAAiB,EAAE/K,UAAU,IAAIA,UAAU,CAAC+K,iBAAiB;QAC7DC,QAAQ,EAAEhL,UAAU,IAAIA,UAAU,CAACgL,QAAQ;QAC3CjK,SAAS,EACPA,SAAS,IAAIA,SAAS,CAACW,SAAS,GAC5B;UACEA,SAAS,EAAEX,SAAS,CAACW;QACvB,CAAC,GACDU;MACR,CAAC;MAEDyI,MAAM,CAACH,OAAO,CAACjN,KAAK,CAACE,eAAe,CAACsN,KAAK,CAACH,oBAAoB,CAAC,CAAC;IACnE;EAAC;IAAA1H,GAAA;IAAAK,KAAA,EAED,SAAAyH,4BAA4BL,MAAM,EAAE7K,UAAU,EAAE;MAC9C,IAAMmL,0BAA0B,GAAGnL,UAAU,GACzC;QACEG,gBAAgB,EAAEH,UAAU,CAACG,gBAAgB;QAC7CC,SAAS,EAAEJ,UAAU,CAACI,SAAS;QAC/BC,eAAe,EAAEL,UAAU,CAACK,eAAe;QAC3CC,eAAe,EAAEN,UAAU,CAACM;MAC9B,CAAC,GACD8B,SAAS;MACb,IAAIpC,UAAU,CAACoL,eAAe,EAAE;QAC9BD,0BAA0B,CAACC,eAAe,GAAGpL,UAAU,CAACoL,eAAe;MACzE;MAEAP,MAAM,CAACH,OAAO,CAACjN,KAAK,CAACG,qBAAqB,CAACqN,KAAK,CAACE,0BAA0B,CAAC,CAAC;IAC/E;EAAC;IAAA/H,GAAA;IAAAK,KAAA,EAED,SAAAR,oBAAA,EAAsB;MACpBzG,SAAS,CAACiO,KAAK,CAAC,CAAC;MAEjBjO,SAAS,CAACkO,OAAO,CAAC,yDAAyD,CAAC;MAC5ElO,SAAS,CAACkO,OAAO,CACf,8EAA8E,GAC5E,gFAAgF,GAChF,yEAAyE,GACzE,uBAAuB,GACvB,6EACJ,CAAC;MAED,IAAI,CAACE,qBAAqB,CAACpO,SAAS,EAAE,IAAI,CAACwD,UAAU,EAAE,IAAI,CAACe,SAAS,CAAC;MAEtEvE,SAAS,CAACkO,OAAO,CAACjN,KAAK,CAACU,UAAU,CAAC8M,KAAK,CAAC,IAAI,CAAClI,KAAK,CAAC,CAAC;MAErD,IAAI,CAACmI,2BAA2B,CAAC1O,SAAS,EAAE,IAAI,CAACwD,UAAU,CAAC;MAE5D,IAAI,CAACgF,MAAM,CAAC2F,KAAK,CAACnO,SAAS,CAAC;IAC9B;EAAC;IAAA4G,GAAA;IAAAK,KAAA,EAED,SAAA4H,cAAA,EAAgB;MACd,IAAMC,IAAI,GAAGlP,MAAM,CAACmP,OAAO,CAAC,IAAI,CAAC1N,OAAO,CAAC;MACzC,IAAIyN,IAAI,EAAE;QACR7N,KAAK,CAACI,OAAO,CAAC2N,OAAO,CAACF,IAAI,EAAE;UAACG,MAAM,EAAE,IAAI,CAAC9I,SAAS,CAAC8I;QAAM,CAAC,CAAC;QAC5D,IAAI,CAACzG,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACI,OAAO,CAACoN,KAAK,CAACK,IAAI,CAAC,CAAC;MAC9C;IACF;EAAC;IAAAlI,GAAA;IAAAK,KAAA,EAED,SAAAQ,oBAAA,EAAsB;MACpB,IAAI,CAACsG,MAAM,CAAC,aAAa,CAAC;IAC5B;EAAC;IAAAnH,GAAA;IAAAK,KAAA,EAED,SAAAO,UAAU/F,GAAG,EAAE;MACb,IAAI,CAAC,IAAI,CAACiF,WAAW,EAAE;QACrB,IAAI,CAACmI,aAAa,CAAC,CAAC;QACpB,IAAI,CAACpH,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACf,WAAW,GAAG,IAAI;MACzB;MAEA,IAAIjF,GAAG,CAACgJ,SAAS,IAAIhJ,GAAG,CAACyN,MAAM,EAAE;QAC/B,IAAOC,KAAK,GAAI1N,GAAG,CAAZ0N,KAAK;QACZ,IAAM9M,OAAO,GAAG;UACd4M,MAAM,EAAE,IAAI,CAAC9I,SAAS,CAAC8I,MAAM;UAC7BG,aAAa,EAAE,IAAI,CAAClJ,gBAAgB,GAAG,IAAI,CAACC,SAAS,CAACiJ,aAAa,GAAGxJ,SAAS;UAC/ElE,UAAU,EAAE,IAAI,CAACsB,gBAAgB,CAACqM,eAAe;UACjDC,MAAM,EAAE,IAAI,CAACxM,OAAO;UACpByM,QAAQ,EAAE,IAAI,CAAClM,SAAS;UACxBmM,UAAU,EAAE,IAAI,CAAClM,WAAW;UAC5BmM,QAAQ,EAAE;QACZ,CAAC;QACDxO,KAAK,CAACQ,GAAG,CAACuN,OAAO,CAACG,KAAK,EAAE9M,OAAO,CAAC;QACjC,IAAI,CAACmG,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACQ,GAAG,CAACgN,KAAK,CAACU,KAAK,CAAC,CAAC;QAEzC,IAAI9M,OAAO,CAACoN,QAAQ,CAAClO,MAAM,EAAE;UAC3B,IAAI,CAAC8E,WAAW,GAAG,IAAI;UACvB,IAAI,CAACpD,oBAAoB,CAACyM,WAAW,CAACrN,OAAO,CAACoN,QAAQ,CAAC;QACzD;MACF;IACF;EAAC;IAAA7I,GAAA;IAAAK,KAAA,EAED,SAAAS,qBAAA,EAAuB;MACrB,IAAI,CAACqG,MAAM,CAAC,cAAc,CAAC;IAC7B;EAAC;IAAAnH,GAAA;IAAAK,KAAA,EAED,SAAAW,iBAAA,EAAmB;MACjB,IAAI,IAAI,CAAC9E,OAAO,CAACvB,MAAM,EAAE;QACvBvB,SAAS,CAACiO,KAAK,CAAC,CAAC;QACjBjO,SAAS,CAACkO,OAAO,wBAAAzL,MAAA,CAAuB,IAAI,CAACK,OAAO,CAACvB,MAAM,QAAI,CAAC;QAChE,IAAI,CAACuB,OAAO,CAACwE,OAAO,CAAC,UAAA0E,KAAK,EAAI;UAC5BhM,SAAS,CAACkO,OAAO,qBAAAzL,MAAA,CAAoBuJ,KAAK,SAAK,CAAC;QAClD,CAAC,CAAC;QACFhM,SAAS,CAACkO,OAAO,CAAC,eAAe,CAAC;QAElC,IAAI,CAAC1F,MAAM,CAAC2F,KAAK,CAACnO,SAAS,CAAC;MAC9B;IACF;EAAC;IAAA4G,GAAA;IAAAK,KAAA,EAED,SAAAY,iBAAA,EAAmB;MACjB;MACA,IAAI,CAACW,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACS,UAAU,CAAC+M,KAAK,CAAC,IAAI,CAACzL,gBAAgB,CAAC2M,WAAW,CAAC,CAAC;IAC9E;EAAC;IAAA/I,GAAA;IAAAK,KAAA,EAED,SAAAa,4BAAA,EAA8B;MAC5B,IAAMzF,OAAO,GAAG;QACd4M,MAAM,EAAE,IAAI,CAAC9I,SAAS,CAAC8I;MACzB,CAAC;MACDhO,KAAK,CAACgB,sBAAsB,CAAC+M,OAAO,CAAC,IAAI,CAACzL,qBAAqB,EAAElB,OAAO,CAAC;MACzE,IAAI,CAACmG,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACgB,sBAAsB,CAACwM,KAAK,CAAC,IAAI,CAAClL,qBAAqB,CAAC,CAAC;IACnF;EAAC;IAAAqD,GAAA;IAAAK,KAAA,EAED,SAAAoB,gBAAA,EAAkB;MAChB,IAAI,CAACG,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACkB,SAAS,CAACsM,KAAK,CAAC,IAAI,CAACtM,SAAS,CAAC,CAAC;IAC1D;EAAC;IAAAyE,GAAA;IAAAK,KAAA,EAED,SAAAc,sBAAA,EAAwB;MACtB,IAAI,CAACS,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACC,eAAe,CAACuN,KAAK,CAAC,IAAI,CAACvN,eAAe,CAACiO,KAAK,CAAC,CAAC;IAC5E;EAAC;IAAAvI,GAAA;IAAAK,KAAA,EAED,SAAAe,sBAAA,EAAwB;MACtB,IAAI,CAACQ,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACW,eAAe,CAAC6M,KAAK,CAAC,IAAI,CAAC7M,eAAe,CAAC,CAAC;IACtE;EAAC;IAAAgF,GAAA;IAAAK,KAAA,EAED,SAAAgB,kBAAA,EAAoB;MAClB,IAAI,CAACO,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACY,WAAW,CAAC4M,KAAK,CAAC,IAAI,CAAClK,SAAS,CAACC,OAAO,CAAC,CAAC;IACpE;EAAC;IAAAoC,GAAA;IAAAK,KAAA,EAED,SAAAiB,gBAAA,EAAkB;MAChB,IAAI,CAACM,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACa,UAAU,CAAC2M,KAAK,CAAC,IAAI,CAAClK,SAAS,CAAC,CAAC;IAC3D;EAAC;IAAAqC,GAAA;IAAAK,KAAA,EAED,SAAAmB,mBAAA,EAAqB;MACnB,IAAI,CAACI,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACiB,YAAY,CAACuM,KAAK,CAAC,IAAI,CAACvM,YAAY,CAAC,CAAC;IAChE;EAAC;IAAA0E,GAAA;IAAAK,KAAA,EAED,SAAAU,iBAAA,EAAmB;MACjB,IAAI,CAACa,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACc,UAAU,CAAC0M,KAAK,CAAC,IAAI,CAAC1M,UAAU,CAAC,CAAC;IAC5D;EAAC;IAAA6E,GAAA;IAAAK,KAAA,EAED,SAAAkB,iBAAA,EAAmB;MACjB,IAAI,IAAI,CAACyE,WAAW,EAAE;QACpB,IAAI,IAAI,CAACA,WAAW,CAACD,OAAO,KAAK/G,SAAS,EAAE;UAC1C,IAAMgK,KAAK,GAAG,IAAI,CAACzJ,SAAS,CAAC0J,QAAQ,CAAC,IAAI,CAACjD,WAAW,CAACD,OAAO,CAAC;UAC/D,IAAMmD,SAAS,GAAG,IAAI,CAAC9M,gBAAgB,CAAC+M,QAAQ,CAAC;YAC/CC,MAAM,cAAAvN,MAAA,CAAcmN,KAAK,CAACpN,IAAI,CAAE;YAChCyN,IAAI,EAAE3Q,OAAO,CAAC4Q;UAChB,CAAC,CAAC;UAEF,IAAI,CAACtD,WAAW,GAAAuD,aAAA,CAAAA,aAAA,KACX,IAAI,CAACvD,WAAW;YACnBwD,GAAG,EAAEN;UAAS,EACf;QACH;QACA,IAAI,CAACtH,MAAM,CAAC2F,KAAK,CAAClN,KAAK,CAACe,OAAO,CAACyM,KAAK,CAAC;UAAC2B,GAAG,EAAE,IAAI,CAACxD,WAAW,CAACwD;QAAG,CAAC,CAAC,CAAC;MACrE;IACF;EAAC;IAAAxJ,GAAA;IAAAK,KAAA,EAED,SAAAqB,iBAAA,EAAmB;MACjB,IAAI,IAAI,CAACjC,WAAW,EAAE;QACpBrG,SAAS,CAACiO,KAAK,CAAC,CAAC;QACjBjO,SAAS,CAACkO,OAAO,0BAAAzL,MAAA,CAAyB,IAAI,CAACQ,oBAAoB,CAACoN,QAAQ,SAAK,CAAC;QAClF,IAAI,CAAC7H,MAAM,CAAC2F,KAAK,CAACnO,SAAS,CAAC;MAC9B;IACF;EAAC;IAAA4G,GAAA;IAAAK,KAAA,EAED,SAAAqJ,iBAAA,EAAmB;MACjB;MACA;MACA;IAAA;EACD;IAAA1J,GAAA;IAAAK,KAAA,EAED,SAAAsB,qBAAA,EAAuB;MACrB,IAAI,CAACwF,MAAM,CAAC,cAAc,CAAC;IAC7B;EAAC;EAAA,OAAA3L,eAAA;AAAA;AAGHmO,MAAM,CAACC,OAAO,GAAGpO,eAAe"}