{"version":3,"file":"blip-fill-xform.js","names":["BaseXform","require","BlipXform","BlipFillXform","_BaseXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","_createClass","key","get","value","render","xmlStream","model","openNode","tag","leafNode","closeNode","parseOpen","node","parser","name","reset","parseText","parseClose","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/blip-fill-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\r\nconst BlipXform = require('./blip-xform');\r\n\r\nclass BlipFillXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'a:blip': new BlipXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'xdr:blipFill';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['a:blip'].render(xmlStream, model);\r\n\r\n    // TODO: options for this + parsing\r\n    xmlStream.openNode('a:stretch');\r\n    xmlStream.leafNode('a:fillRect');\r\n    xmlStream.closeNode();\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = this.map['a:blip'].model;\r\n        return false;\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = BlipFillXform;\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAMC,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;AAAC,IAEpCE,aAAa,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EACjB,SAAAA,cAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,aAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,GAAG,GAAG;MACT,QAAQ,EAAE,IAAIT,SAAS,CAAC;IAC1B,CAAC;IAAC,OAAAM,KAAA;EACJ;EAACI,YAAA,CAAAT,aAAA;IAAAU,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,cAAc;IACvB;EAAC;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,OAAOC,SAAS,EAAEC,KAAK,EAAE;MACvBD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACC,GAAG,CAAC;MAE5B,IAAI,CAACT,GAAG,CAAC,QAAQ,CAAC,CAACK,MAAM,CAACC,SAAS,EAAEC,KAAK,CAAC;;MAE3C;MACAD,SAAS,CAACE,QAAQ,CAAC,WAAW,CAAC;MAC/BF,SAAS,CAACI,QAAQ,CAAC,YAAY,CAAC;MAChCJ,SAAS,CAACK,SAAS,CAAC,CAAC;MAErBL,SAAS,CAACK,SAAS,CAAC,CAAC;IACvB;EAAC;IAAAT,GAAA;IAAAE,KAAA,EAED,SAAAQ,UAAUC,IAAI,EAAE;MACd,IAAI,IAAI,CAACC,MAAM,EAAE;QACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC3B,OAAO,IAAI;MACb;MAEA,QAAQA,IAAI,CAACE,IAAI;QACf,KAAK,IAAI,CAACN,GAAG;UACX,IAAI,CAACO,KAAK,CAAC,CAAC;UACZ;QAEF;UACE,IAAI,CAACF,MAAM,GAAG,IAAI,CAACd,GAAG,CAACa,IAAI,CAACE,IAAI,CAAC;UACjC,IAAI,IAAI,CAACD,MAAM,EAAE;YACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;UAC7B;UACA;MACJ;MACA,OAAO,IAAI;IACb;EAAC;IAAAX,GAAA;IAAAE,KAAA,EAED,SAAAa,UAAA,EAAY,CAAC;EAAC;IAAAf,GAAA;IAAAE,KAAA,EAEd,SAAAc,WAAWH,IAAI,EAAE;MACf,IAAI,IAAI,CAACD,MAAM,EAAE;QACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,UAAU,CAACH,IAAI,CAAC,EAAE;UACjC,IAAI,CAACD,MAAM,GAAGK,SAAS;QACzB;QACA,OAAO,IAAI;MACb;MACA,QAAQJ,IAAI;QACV,KAAK,IAAI,CAACN,GAAG;UACX,IAAI,CAACF,KAAK,GAAG,IAAI,CAACP,GAAG,CAAC,QAAQ,CAAC,CAACO,KAAK;UACrC,OAAO,KAAK;QAEd;UACE,OAAO,IAAI;MACf;IACF;EAAC;EAAA,OAAAf,aAAA;AAAA,EAhEyBH,SAAS;AAmErC+B,MAAM,CAACC,OAAO,GAAG7B,aAAa"}