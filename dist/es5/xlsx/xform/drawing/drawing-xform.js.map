{"version":3,"file":"drawing-xform.js","names":["colCache","require","XmlStream","BaseXform","TwoCellAnchorXform","OneCellAnchorXform","getAnchorType","model","range","decode","br","DrawingXform","_BaseXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","_createClass","key","value","prepare","_this2","anchors","forEach","item","index","anchorType","anchor","get","render","xmlStream","_this3","openXml","StdDocAttributes","openNode","tag","DRAWING_ATTRIBUTES","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","push","undefined","reconcile","options","_this4","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/drawing-xform.js"],"sourcesContent":["const colCache = require('../../../utils/col-cache');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst TwoCellAnchorXform = require('./two-cell-anchor-xform');\r\nconst OneCellAnchorXform = require('./one-cell-anchor-xform');\r\n\r\nfunction getAnchorType(model) {\r\n  const range = typeof model.range === 'string' ? colCache.decode(model.range) : model.range;\r\n\r\n  return range.br ? 'xdr:twoCellAnchor' : 'xdr:oneCellAnchor';\r\n}\r\n\r\nclass DrawingXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'xdr:twoCellAnchor': new TwoCellAnchorXform(),\r\n      'xdr:oneCellAnchor': new OneCellAnchorXform(),\r\n    };\r\n  }\r\n\r\n  prepare(model) {\r\n    model.anchors.forEach((item, index) => {\r\n      item.anchorType = getAnchorType(item);\r\n      const anchor = this.map[item.anchorType];\r\n      anchor.prepare(item, {index});\r\n    });\r\n  }\r\n\r\n  get tag() {\r\n    return 'xdr:wsDr';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode(this.tag, DrawingXform.DRAWING_ATTRIBUTES);\r\n\r\n    model.anchors.forEach(item => {\r\n      const anchor = this.map[item.anchorType];\r\n      anchor.render(xmlStream, item);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          anchors: [],\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.anchors.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        return false;\r\n      default:\r\n        // could be some unrecognised tags\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    model.anchors.forEach(anchor => {\r\n      if (anchor.br) {\r\n        this.map['xdr:twoCellAnchor'].reconcile(anchor, options);\r\n      } else {\r\n        this.map['xdr:oneCellAnchor'].reconcile(anchor, options);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nDrawingXform.DRAWING_ATTRIBUTES = {\r\n  'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\r\n  'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\r\n};\r\n\r\nmodule.exports = DrawingXform;\r\n"],"mappings":"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"}