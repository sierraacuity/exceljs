{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","NUMFMT_BASE","StylesXform","_BaseXform","_inherits","_super","_createSuper","initialise","_this","_classCallCheck","call","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","init","_createClass","key","value","initIndex","index","numFmtNextId","model","styles","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","render","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","color","theme","name","family","scheme","fontXml","fillXml","borderXml","styleXml","parseOpen","node","parser","parseText","text","parseClose","_this2","undefined","add","propName","xform","numFmtIndex","id","formatCode","addStyleModel","cellType","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","addDxfStyle","push","getDxfStyle","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","_StylesXform","_super2","_this3","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst Enums = require('../../../doc/enums');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst StaticXform = require('../static-xform');\r\nconst ListXform = require('../list-xform');\r\nconst FontXform = require('./font-xform');\r\nconst FillXform = require('./fill-xform');\r\nconst BorderXform = require('./border-xform');\r\nconst NumFmtXform = require('./numfmt-xform');\r\nconst StyleXform = require('./style-xform');\r\nconst DxfXform = require('./dxf-xform');\r\n\r\n// custom numfmt ids start here\r\nconst NUMFMT_BASE = 164;\r\n\r\n// =============================================================================\r\n// StylesXform is used to generate and parse the styles.xml file\r\n// it manages the collections of fonts, number formats, alignments, etc\r\nclass StylesXform extends BaseXform {\r\n  constructor(initialise) {\r\n    super();\r\n\r\n    this.map = {\r\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\r\n      fonts: new ListXform({\r\n        tag: 'fonts',\r\n        count: true,\r\n        childXform: new FontXform(),\r\n        $: {'x14ac:knownFonts': 1},\r\n      }),\r\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\r\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\r\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\r\n      cellXfs: new ListXform({\r\n        tag: 'cellXfs',\r\n        count: true,\r\n        childXform: new StyleXform({xfId: true}),\r\n      }),\r\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\r\n\r\n      // for style manager\r\n      numFmt: new NumFmtXform(),\r\n      font: new FontXform(),\r\n      fill: new FillXform(),\r\n      border: new BorderXform(),\r\n      style: new StyleXform({xfId: true}),\r\n\r\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\r\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\r\n      extLst: StylesXform.STATIC_XFORMS.extLst,\r\n    };\r\n\r\n    if (initialise) {\r\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  initIndex() {\r\n    this.index = {\r\n      style: {},\r\n      numFmt: {},\r\n      numFmtNextId: 164, // start custom format ids here\r\n      font: {},\r\n      border: {},\r\n      fill: {},\r\n    };\r\n  }\r\n\r\n  init() {\r\n    // Prepare for Style Manager role\r\n    this.model = {\r\n      styles: [],\r\n      numFmts: [],\r\n      fonts: [],\r\n      borders: [],\r\n      fills: [],\r\n      dxfs: [],\r\n    };\r\n\r\n    this.initIndex();\r\n\r\n    // default (zero) border\r\n    this._addBorder({});\r\n\r\n    // add default (all zero) style\r\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\r\n\r\n    // add default fills\r\n    this._addFill({type: 'pattern', pattern: 'none'});\r\n    this._addFill({type: 'pattern', pattern: 'gray125'});\r\n\r\n    this.weakMap = new WeakMap();\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    model = model || this.model;\r\n    //\r\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n\r\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\r\n\r\n    if (this.index) {\r\n      // model has been built by style manager role (contains xml)\r\n      if (model.numFmts && model.numFmts.length) {\r\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\r\n        model.numFmts.forEach(numFmtXml => {\r\n          xmlStream.writeXml(numFmtXml);\r\n        });\r\n        xmlStream.closeNode();\r\n      }\r\n\r\n      if (!model.fonts.length) {\r\n        // default (zero) font\r\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n      }\r\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\r\n      model.fonts.forEach(fontXml => {\r\n        xmlStream.writeXml(fontXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('fills', {count: model.fills.length});\r\n      model.fills.forEach(fillXml => {\r\n        xmlStream.writeXml(fillXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      xmlStream.openNode('borders', {count: model.borders.length});\r\n      model.borders.forEach(borderXml => {\r\n        xmlStream.writeXml(borderXml);\r\n      });\r\n      xmlStream.closeNode();\r\n\r\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\r\n\r\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\r\n      model.styles.forEach(styleXml => {\r\n        xmlStream.writeXml(styleXml);\r\n      });\r\n      xmlStream.closeNode();\r\n    } else {\r\n      // model is plain JSON and needs to be xformed\r\n      this.map.numFmts.render(xmlStream, model.numFmts);\r\n      this.map.fonts.render(xmlStream, model.fonts);\r\n      this.map.fills.render(xmlStream, model.fills);\r\n      this.map.borders.render(xmlStream, model.borders);\r\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\r\n      this.map.cellXfs.render(xmlStream, model.styles);\r\n    }\r\n\r\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\r\n\r\n    this.map.dxfs.render(xmlStream, model.dxfs);\r\n\r\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\r\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'styleSheet':\r\n        this.initIndex();\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'styleSheet': {\r\n        this.model = {};\r\n        const add = (propName, xform) => {\r\n          if (xform.model && xform.model.length) {\r\n            this.model[propName] = xform.model;\r\n          }\r\n        };\r\n        add('numFmts', this.map.numFmts);\r\n        add('fonts', this.map.fonts);\r\n        add('fills', this.map.fills);\r\n        add('borders', this.map.borders);\r\n        add('styles', this.map.cellXfs);\r\n        add('dxfs', this.map.dxfs);\r\n\r\n        // index numFmts\r\n        this.index = {\r\n          model: [],\r\n          numFmt: [],\r\n        };\r\n        if (this.model.numFmts) {\r\n          const numFmtIndex = this.index.numFmt;\r\n          this.model.numFmts.forEach(numFmt => {\r\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\r\n          });\r\n        }\r\n\r\n        return false;\r\n      }\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    if (!model) {\r\n      return 0;\r\n    }\r\n\r\n    // if we have no default font, add it here now\r\n    if (!this.model.fonts.length) {\r\n      // default (zero) font\r\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\r\n    }\r\n\r\n    // if we have seen this style object before, assume it has the same styleId\r\n    if (this.weakMap && this.weakMap.has(model)) {\r\n      return this.weakMap.get(model);\r\n    }\r\n\r\n    const style = {};\r\n    cellType = cellType || Enums.ValueType.Number;\r\n\r\n    if (model.numFmt) {\r\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\r\n    } else {\r\n      switch (cellType) {\r\n        case Enums.ValueType.Number:\r\n          style.numFmtId = this._addNumFmtStr('General');\r\n          break;\r\n        case Enums.ValueType.Date:\r\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (model.font) {\r\n      style.fontId = this._addFont(model.font);\r\n    }\r\n\r\n    if (model.border) {\r\n      style.borderId = this._addBorder(model.border);\r\n    }\r\n\r\n    if (model.fill) {\r\n      style.fillId = this._addFill(model.fill);\r\n    }\r\n\r\n    if (model.alignment) {\r\n      style.alignment = model.alignment;\r\n    }\r\n\r\n    if (model.protection) {\r\n      style.protection = model.protection;\r\n    }\r\n\r\n    const styleId = this._addStyle(style);\r\n    if (this.weakMap) {\r\n      this.weakMap.set(model, styleId);\r\n    }\r\n    return styleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(id) {\r\n    // if the style doesn't exist return null\r\n    const style = this.model.styles[id];\r\n    if (!style) return null;\r\n\r\n    // have we built this model before?\r\n    let model = this.index.model[id];\r\n    if (model) return model;\r\n\r\n    // build a new model\r\n    model = this.index.model[id] = {};\r\n\r\n    // -------------------------------------------------------\r\n    // number format\r\n    if (style.numFmtId) {\r\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\r\n      if (numFmt) {\r\n        model.numFmt = numFmt;\r\n      }\r\n    }\r\n\r\n    function addStyle(name, group, styleId) {\r\n      if (styleId || styleId === 0) {\r\n        const part = group[styleId];\r\n        if (part) {\r\n          model[name] = part;\r\n        }\r\n      }\r\n    }\r\n\r\n    addStyle('font', this.model.fonts, style.fontId);\r\n    addStyle('border', this.model.borders, style.borderId);\r\n    addStyle('fill', this.model.fills, style.fillId);\r\n\r\n    // -------------------------------------------------------\r\n    // alignment\r\n    if (style.alignment) {\r\n      model.alignment = style.alignment;\r\n    }\r\n\r\n    // -------------------------------------------------------\r\n    // protection\r\n    if (style.protection) {\r\n      model.protection = style.protection;\r\n    }\r\n\r\n    return model;\r\n  }\r\n\r\n  addDxfStyle(style) {\r\n    if (style.numFmt) {\r\n      // register numFmtId to use it during dxf-xform rendering\r\n      style.numFmtId = this._addNumFmtStr(style.numFmt);\r\n    }\r\n\r\n    this.model.dxfs.push(style);\r\n    return this.model.dxfs.length - 1;\r\n  }\r\n\r\n  getDxfStyle(id) {\r\n    return this.model.dxfs[id];\r\n  }\r\n\r\n  // =========================================================================\r\n  // Private Interface\r\n  _addStyle(style) {\r\n    const xml = this.map.style.toXml(style);\r\n    let index = this.index.style[xml];\r\n    if (index === undefined) {\r\n      index = this.index.style[xml] = this.model.styles.length;\r\n      this.model.styles.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Number Formats\r\n  _addNumFmtStr(formatCode) {\r\n    // check if default format\r\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\r\n    if (index !== undefined) return index;\r\n\r\n    // check if already in\r\n    index = this.index.numFmt[formatCode];\r\n    if (index !== undefined) return index;\r\n\r\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\r\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\r\n    this.model.numFmts.push(xml);\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fonts\r\n  _addFont(font) {\r\n    const xml = this.map.font.toXml(font);\r\n    let index = this.index.font[xml];\r\n    if (index === undefined) {\r\n      index = this.index.font[xml] = this.model.fonts.length;\r\n      this.model.fonts.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Borders\r\n  _addBorder(border) {\r\n    const xml = this.map.border.toXml(border);\r\n    let index = this.index.border[xml];\r\n    if (index === undefined) {\r\n      index = this.index.border[xml] = this.model.borders.length;\r\n      this.model.borders.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Fills\r\n  _addFill(fill) {\r\n    const xml = this.map.fill.toXml(fill);\r\n    let index = this.index.fill[xml];\r\n    if (index === undefined) {\r\n      index = this.index.fill[xml] = this.model.fills.length;\r\n      this.model.fills.push(xml);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // =========================================================================\r\n}\r\n\r\nStylesXform.STYLESHEET_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'x14ac x16r2',\r\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\r\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\r\n};\r\nStylesXform.STATIC_XFORMS = {\r\n  cellStyles: new StaticXform({\r\n    tag: 'cellStyles',\r\n    $: {count: 1},\r\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\r\n  }),\r\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\r\n  tableStyles: new StaticXform({\r\n    tag: 'tableStyles',\r\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\r\n  }),\r\n  extLst: new StaticXform({\r\n    tag: 'extLst',\r\n    c: [\r\n      {\r\n        tag: 'ext',\r\n        $: {\r\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\r\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\r\n        },\r\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\r\n      },\r\n      {\r\n        tag: 'ext',\r\n        $: {\r\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\r\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\r\n        },\r\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\r\n      },\r\n    ],\r\n  }),\r\n};\r\n\r\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\r\nclass StylesXformMock extends StylesXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.model = {\r\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\r\n      numFmts: [],\r\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\r\n      borders: [{}],\r\n      fills: [\r\n        {type: 'pattern', pattern: 'none'},\r\n        {type: 'pattern', pattern: 'gray125'},\r\n      ],\r\n    };\r\n  }\r\n\r\n  // =========================================================================\r\n  // Style Manager Interface\r\n\r\n  // override normal behaviour - consume and dispose\r\n  parseStream(stream) {\r\n    stream.autodrain();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // add a cell's style model to the collection\r\n  // each style property is processed and cross-referenced, etc.\r\n  // the styleId is returned. Note: cellType is used when numFmt not defined\r\n  addStyleModel(model, cellType) {\r\n    switch (cellType) {\r\n      case Enums.ValueType.Date:\r\n        return this.dateStyleId;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  get dateStyleId() {\r\n    if (!this._dateStyleId) {\r\n      const dateStyle = {\r\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\r\n      };\r\n      this._dateStyleId = this.model.styles.length;\r\n      this.model.styles.push(dateStyle);\r\n    }\r\n    return this._dateStyleId;\r\n  }\r\n\r\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\r\n  // objects are shared where possible.\r\n  getStyleModel(/* id */) {\r\n    return {};\r\n  }\r\n}\r\n\r\nStylesXform.Mock = StylesXformMock;\r\n\r\nmodule.exports = StylesXform;\r\n"],"mappings":"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"}